{
  "overview": {
    "description": "Vulnerabilities overview",
    "total": 923,
    "low": 41,
    "medium": 526,
    "high": 253,
    "critical": 101,
    "uncategorized": 2
  },
  "reports": [
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.fasterxml.jackson.core:jackson-annotations:2.9.0)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2018-1000873",
          "software": "cpe:2.3:a:fasterxml:jackson-modules-java8:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.fasterxml.jackson.core:jackson-core:2.9.0)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2018-1000873",
          "software": "cpe:2.3:a:fasterxml:jackson-modules-java8:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.fasterxml.jackson.core:jackson-databind:2.9.0)",
      "alerts": 65,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2017-15095",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:2.9.0:prerelease3:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously."
        },
        {
          "name": "CVE-2017-17485",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath."
        },
        {
          "name": "CVE-2017-7525",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:2.9.0:prerelease1:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper."
        },
        {
          "name": "CVE-2018-1000873",
          "software": "cpe:2.3:a:fasterxml:jackson-modules-java8:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."
        },
        {
          "name": "CVE-2018-11307",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6."
        },
        {
          "name": "CVE-2018-12022",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload."
        },
        {
          "name": "CVE-2018-12023",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload."
        },
        {
          "name": "CVE-2018-14718",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-14719",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-14720",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-14721",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-19360",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-19361",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-19362",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization."
        },
        {
          "name": "CVE-2018-5968",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist."
        },
        {
          "name": "CVE-2018-7489",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath."
        },
        {
          "name": "CVE-2019-12086",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation."
        },
        {
          "name": "CVE-2019-12384",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible."
        },
        {
          "name": "CVE-2019-12814",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server."
        },
        {
          "name": "CVE-2019-14379",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution."
        },
        {
          "name": "CVE-2019-14439",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath."
        },
        {
          "name": "CVE-2019-14540",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig."
        },
        {
          "name": "CVE-2019-14892",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code."
        },
        {
          "name": "CVE-2019-14893",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code."
        },
        {
          "name": "CVE-2019-16335",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540."
        },
        {
          "name": "CVE-2019-16942",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling."
        },
        {
          "name": "CVE-2019-16943",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling."
        },
        {
          "name": "CVE-2019-17267",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup."
        },
        {
          "name": "CVE-2019-17531",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload."
        },
        {
          "name": "CVE-2019-20330",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking."
        },
        {
          "name": "CVE-2020-10672",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms)."
        },
        {
          "name": "CVE-2020-10673",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus)."
        },
        {
          "name": "CVE-2020-10968",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy)."
        },
        {
          "name": "CVE-2020-10969",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane."
        },
        {
          "name": "CVE-2020-11111",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms)."
        },
        {
          "name": "CVE-2020-11112",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy)."
        },
        {
          "name": "CVE-2020-11113",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa)."
        },
        {
          "name": "CVE-2020-11619",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop)."
        },
        {
          "name": "CVE-2020-11620",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly)."
        },
        {
          "name": "CVE-2020-14060",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill)."
        },
        {
          "name": "CVE-2020-14061",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms)."
        },
        {
          "name": "CVE-2020-14062",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2)."
        },
        {
          "name": "CVE-2020-14195",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity)."
        },
        {
          "name": "CVE-2020-24616",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP)."
        },
        {
          "name": "CVE-2020-24750",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration."
        },
        {
          "name": "CVE-2020-25649",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity."
        },
        {
          "name": "CVE-2020-35490",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource."
        },
        {
          "name": "CVE-2020-35491",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource."
        },
        {
          "name": "CVE-2020-35728",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl)."
        },
        {
          "name": "CVE-2020-36179",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS."
        },
        {
          "name": "CVE-2020-36180",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS."
        },
        {
          "name": "CVE-2020-36181",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS."
        },
        {
          "name": "CVE-2020-36182",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS."
        },
        {
          "name": "CVE-2020-36183",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool."
        },
        {
          "name": "CVE-2020-36184",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource."
        },
        {
          "name": "CVE-2020-36185",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource."
        },
        {
          "name": "CVE-2020-36186",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource."
        },
        {
          "name": "CVE-2020-36187",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource."
        },
        {
          "name": "CVE-2020-36188",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource."
        },
        {
          "name": "CVE-2020-36189",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource."
        },
        {
          "name": "CVE-2020-8840",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter."
        },
        {
          "name": "CVE-2020-9546",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config)."
        },
        {
          "name": "CVE-2020-9547",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap)."
        },
        {
          "name": "CVE-2020-9548",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core)."
        },
        {
          "name": "CVE-2021-20190",
          "software": "cpe:2.3:a:fasterxml:jackson-databind:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.google.guava:guava:28.1-jre)",
      "alerts": 1,
      "highest": "LOW",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8908",
          "software": "cpe:2.3:a:google:guava:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.google.protobuf:protobuf-java:3.4.0)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-22569",
          "software": "cpe:2.3:a:google:protobuf-java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "An issue in protobuf-java allowed the interleaving of com.google.protobuf.UnknownFieldSet fields in such a way that would be processed out of order. A small malicious payload can occupy the parser for several minutes by creating large numbers of short-lived objects that cause frequent, repeated pauses. We recommend upgrading libraries beyond the vulnerable versions."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.hazelcast:hazelcast:3.8.2)",
      "alerts": 1,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2016-10750",
          "software": "cpe:2.3:a:hazelcast:hazelcast:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Hazelcast before 3.11, the cluster join procedure is vulnerable to remote code execution via Java deserialization. If an attacker can reach a listening Hazelcast instance with a crafted JoinRequest, and vulnerable classes exist in the classpath, the attacker can run arbitrary code."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: com.microsoft.azure:adal4j:1.6.4)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-42306",
          "software": "cpe:2.3:a:microsoft:azure_active_directory:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Azure Active Directory Information Disclosure Vulnerability"
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-buffer:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-codec-dns:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-codec-http2:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-codec-http:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-codec-socks:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-codec:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-common:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-handler-proxy:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-handler:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-resolver-dns:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-resolver:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-transport-native-epoll:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-transport-native-kqueue:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-transport-native-unix-common:4.1.52.Final)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.netty:netty-transport:4.1.15.Final)",
      "alerts": 10,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2019-16869",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling."
        },
        {
          "name": "CVE-2019-20444",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\""
        },
        {
          "name": "CVE-2019-20445",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header."
        },
        {
          "name": "CVE-2020-11612",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder."
        },
        {
          "name": "CVE-2021-21290",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user."
        },
        {
          "name": "CVE-2021-21295",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`."
        },
        {
          "name": "CVE-2021-21409",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."
        },
        {
          "name": "CVE-2021-37136",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack"
        },
        {
          "name": "CVE-2021-37137",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk."
        },
        {
          "name": "CVE-2021-43797",
          "software": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final to receive a patch."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.vertx:vertx-core:3.5.0)",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2018-12537",
          "software": "cpe:2.3:a:io.vertx:vertx-core:3.5.0:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Vert.x version 3.0 to 3.5.1, the HttpServer response headers and HttpClient request headers do not filter carriage return and line feed characters from the header value. This allow unfiltered values to inject a new header in the client request or server response."
        },
        {
          "name": "CVE-2018-12540",
          "software": "cpe:2.3:a:io.vertx:vertx-core:3.5.0:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In version from 3.0.0 to 3.5.2 of Eclipse Vert.x, the CSRFHandler do not assert that the XSRF Cookie matches the returned XSRF header/form parameter. This allows replay attacks with previously issued tokens which are not expired yet."
        },
        {
          "name": "CVE-2018-12541",
          "software": "cpe:2.3:a:io.vertx:vertx-core:3.5.0:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the WebSocket HTTP upgrade implementation buffers the full http request before doing the handshake, holding the entire request body in memory. There should be a reasonnable limit (8192 bytes) above which the WebSocket gets an HTTP response with the 413 status code and the connection gets closed."
        },
        {
          "name": "CVE-2018-12542",
          "software": "cpe:2.3:a:io.vertx:vertx-core:3.5.0:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the StaticHandler uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\' (forward slashes) sequences that can resolve to a location that is outside of that directory when running on Windows Operating Systems."
        },
        {
          "name": "CVE-2018-12544",
          "software": "cpe:2.3:a:io.vertx:vertx-core:3.5.0:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In version from 3.5.Beta1 to 3.5.3 of Eclipse Vert.x, the OpenAPI XML type validator creates XML parsers without taking appropriate defense against XML attacks. This mechanism is exclusively when the developer uses the Eclipse Vert.x OpenAPI XML type validator to validate a provided schema."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.vertx:vertx-hazelcast:3.5.0)",
      "alerts": 6,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2016-10750",
          "software": "cpe:2.3:a:hazelcast:hazelcast:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Hazelcast before 3.11, the cluster join procedure is vulnerable to remote code execution via Java deserialization. If an attacker can reach a listening Hazelcast instance with a crafted JoinRequest, and vulnerable classes exist in the classpath, the attacker can run arbitrary code."
        },
        {
          "name": "CVE-2018-12537",
          "software": "cpe:2.3:a:io.vertx:vertx-hazelcast:3.5.0:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Vert.x version 3.0 to 3.5.1, the HttpServer response headers and HttpClient request headers do not filter carriage return and line feed characters from the header value. This allow unfiltered values to inject a new header in the client request or server response."
        },
        {
          "name": "CVE-2018-12540",
          "software": "cpe:2.3:a:io.vertx:vertx-hazelcast:3.5.0:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In version from 3.0.0 to 3.5.2 of Eclipse Vert.x, the CSRFHandler do not assert that the XSRF Cookie matches the returned XSRF header/form parameter. This allows replay attacks with previously issued tokens which are not expired yet."
        },
        {
          "name": "CVE-2018-12541",
          "software": "cpe:2.3:a:io.vertx:vertx-hazelcast:3.5.0:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the WebSocket HTTP upgrade implementation buffers the full http request before doing the handshake, holding the entire request body in memory. There should be a reasonnable limit (8192 bytes) above which the WebSocket gets an HTTP response with the 413 status code and the connection gets closed."
        },
        {
          "name": "CVE-2018-12542",
          "software": "cpe:2.3:a:io.vertx:vertx-hazelcast:3.5.0:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the StaticHandler uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\' (forward slashes) sequences that can resolve to a location that is outside of that directory when running on Windows Operating Systems."
        },
        {
          "name": "CVE-2018-12544",
          "software": "cpe:2.3:a:io.vertx:vertx-hazelcast:3.5.0:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In version from 3.5.Beta1 to 3.5.3 of Eclipse Vert.x, the OpenAPI XML type validator creates XML parsers without taking appropriate defense against XML attacks. This mechanism is exclusively when the developer uses the Eclipse Vert.x OpenAPI XML type validator to validate a provided schema."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.vertx:vertx-web:3.5.0)",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2018-12537",
          "software": "cpe:2.3:a:io.vertx:vertx-web:3.5.0:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Vert.x version 3.0 to 3.5.1, the HttpServer response headers and HttpClient request headers do not filter carriage return and line feed characters from the header value. This allow unfiltered values to inject a new header in the client request or server response."
        },
        {
          "name": "CVE-2018-12540",
          "software": "cpe:2.3:a:io.vertx:vertx-web:3.5.0:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In version from 3.0.0 to 3.5.2 of Eclipse Vert.x, the CSRFHandler do not assert that the XSRF Cookie matches the returned XSRF header/form parameter. This allows replay attacks with previously issued tokens which are not expired yet."
        },
        {
          "name": "CVE-2018-12541",
          "software": "cpe:2.3:a:io.vertx:vertx-web:3.5.0:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the WebSocket HTTP upgrade implementation buffers the full http request before doing the handshake, holding the entire request body in memory. There should be a reasonnable limit (8192 bytes) above which the WebSocket gets an HTTP response with the 413 status code and the connection gets closed."
        },
        {
          "name": "CVE-2018-12542",
          "software": "cpe:2.3:a:io.vertx:vertx-web:3.5.0:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the StaticHandler uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\' (forward slashes) sequences that can resolve to a location that is outside of that directory when running on Windows Operating Systems."
        },
        {
          "name": "CVE-2018-12544",
          "software": "cpe:2.3:a:io.vertx:vertx-web:3.5.0:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In version from 3.5.Beta1 to 3.5.3 of Eclipse Vert.x, the OpenAPI XML type validator creates XML parsers without taking appropriate defense against XML attacks. This mechanism is exclusively when the developer uses the Eclipse Vert.x OpenAPI XML type validator to validate a provided schema."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: net.minidev:accessors-smart:1.2)",
      "alerts": 1,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2021-27568",
          "software": "cpe:2.3:a:json-smart_project:json-smart-v1:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "An issue was discovered in netplex json-smart-v1 through 2015-10-23 and json-smart-v2 through 2.4. An exception is thrown from a function, but it is not caught, as demonstrated by NumberFormatException. When it is not caught, it may cause programs using the library to crash or expose sensitive information."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: net.minidev:json-smart:2.3)",
      "alerts": 1,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2021-27568",
          "software": "cpe:2.3:a:json-smart_project:json-smart-v2:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "An issue was discovered in netplex json-smart-v1 through 2015-10-23 and json-smart-v2 through 2.4. An exception is thrown from a function, but it is not caught, as demonstrated by NumberFormatException. When it is not caught, it may cause programs using the library to crash or expose sensitive information."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.apache.httpcomponents:httpclient:4.3.6)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2020-13956",
          "software": "cpe:2.3:a:apache:httpclient:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.codehaus.plexus:plexus-utils:3.0.20)",
      "alerts": 2,
      "highest": "UNKNOWN",
      "vulnerabilities": [
        {
          "name": "Directory traversal in org.codehaus.plexus.util.Expand",
          "software": "cpe:2.3:a:org.codehaus.plexus:plexus-utils:3.0.20:*:*:*:*:*:*:*",
          "severity": "UNKNOWN",
          "description": "> org.codehaus.plexus.util.Expand does not guard against directory traversal, but such protection is generally expected from unarchiving tools.> > -- [github.com](https://github.com/codehaus-plexus/plexus-utils/issues/4)"
        },
        {
          "name": "Possible XML Injection",
          "software": "cpe:2.3:a:org.codehaus.plexus:plexus-utils:3.0.20:*:*:*:*:*:*:*",
          "severity": "UNKNOWN",
          "description": "> `org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment(XMLWriter, String, int, int, int)` does not check if the comment includes a `\"-->\"` sequence.  This means that text contained in the command string could be interpreted as XML, possibly leading to XML injection issues, depending on how this method is being called.> > -- [github.com](https://github.com/codehaus-plexus/plexus-utils/issues/3)"
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.eclipse.jetty:jetty-http:9.4.20.v20190813)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-27216",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability."
        },
        {
          "name": "CVE-2020-27218",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request."
        },
        {
          "name": "CVE-2020-27223",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values."
        },
        {
          "name": "CVE-2021-28165",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame."
        },
        {
          "name": "CVE-2021-28169",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."
        },
        {
          "name": "CVE-2021-34428",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.eclipse.jetty:jetty-io:9.4.20.v20190813)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-27216",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability."
        },
        {
          "name": "CVE-2020-27218",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request."
        },
        {
          "name": "CVE-2020-27223",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values."
        },
        {
          "name": "CVE-2021-28165",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame."
        },
        {
          "name": "CVE-2021-28169",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."
        },
        {
          "name": "CVE-2021-34428",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.eclipse.jetty:jetty-security:9.4.20.v20190813)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-27216",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability."
        },
        {
          "name": "CVE-2020-27218",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request."
        },
        {
          "name": "CVE-2020-27223",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values."
        },
        {
          "name": "CVE-2021-28165",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame."
        },
        {
          "name": "CVE-2021-28169",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."
        },
        {
          "name": "CVE-2021-34428",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.eclipse.jetty:jetty-server:9.4.20.v20190813)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-27216",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability."
        },
        {
          "name": "CVE-2020-27218",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request."
        },
        {
          "name": "CVE-2020-27223",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values."
        },
        {
          "name": "CVE-2021-28165",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame."
        },
        {
          "name": "CVE-2021-28169",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."
        },
        {
          "name": "CVE-2021-34428",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.eclipse.jetty:jetty-servlet:9.4.20.v20190813)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-27216",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability."
        },
        {
          "name": "CVE-2020-27218",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request."
        },
        {
          "name": "CVE-2020-27223",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values."
        },
        {
          "name": "CVE-2021-28165",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame."
        },
        {
          "name": "CVE-2021-28169",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."
        },
        {
          "name": "CVE-2021-34428",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.eclipse.jetty:jetty-util:9.4.20.v20190813)",
      "alerts": 6,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-27216",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability."
        },
        {
          "name": "CVE-2020-27218",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request."
        },
        {
          "name": "CVE-2020-27223",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values."
        },
        {
          "name": "CVE-2021-28165",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame."
        },
        {
          "name": "CVE-2021-28169",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."
        },
        {
          "name": "CVE-2021-34428",
          "software": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.simpleframework:simple-xml:2.7.1)",
      "alerts": 1,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2017-1000190",
          "software": "cpe:2.3:a:simplexml_project:simplexml:2.7.1:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "SimpleXML (latest version 2.7.1) is vulnerable to an XXE vulnerability resulting SSRF, information disclosure, DoS and so on."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.yaml:snakeyaml:1.23)",
      "alerts": 1,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2017-18640",
          "software": "cpe:2.3:a:snakeyaml_project:snakeyaml:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-fat.jar",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-20291",
          "software": "cpe:2.3:a:storage_project:storage:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS)."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-20291",
          "software": "cpe:2.3:a:storage_project:storage:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS)."
        }
      ]
    },
    {
      "package": "add-storage-azure-0.0.1-SNAPSHOT.jar",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-20291",
          "software": "cpe:2.3:a:storage_project:storage:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS)."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar (shaded: com.fasterxml.jackson.core:jackson-core:2.7.3)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2018-1000873",
          "software": "cpe:2.3:a:fasterxml:jackson-modules-java8:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar (shaded: com.google.guava:guava:20.0)",
      "alerts": 2,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2018-10237",
          "software": "cpe:2.3:a:google:guava:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable."
        },
        {
          "name": "CVE-2020-8908",
          "software": "cpe:2.3:a:google:guava:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar (shaded: commons-io:commons-io:2.5)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-29425",
          "software": "cpe:2.3:a:apache:commons_io:2.5:-:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar (shaded: org.apache.httpcomponents:httpclient:4.5.3)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2020-13956",
          "software": "cpe:2.3:a:apache:httpclient:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar (shaded: org.jboss.resteasy:resteasy-jaxrs:3.1.4.Final)",
      "alerts": 4,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-1695",
          "software": "cpe:2.3:a:org.jboss.resteasy:resteasy-jaxrs:3.1.4.Final:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "A flaw was found in all resteasy 3.x.x versions prior to 3.12.0.Final and all resteasy 4.x.x versions prior to 4.6.0.Final, where an improper input validation results in returning an illegal header that integrates into the server's response. This flaw may result in an injection, which leads to unexpected behavior when the HTTP response is constructed."
        },
        {
          "name": "CVE-2020-25633",
          "software": "cpe:2.3:a:org.jboss.resteasy:resteasy-jaxrs:3.1.4.Final:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server's potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality."
        },
        {
          "name": "CVE-2021-20289",
          "software": "cpe:2.3:a:org.jboss.resteasy:resteasy-jaxrs:3.1.4.Final:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method's parameter value. The highest threat from this vulnerability is to data confidentiality."
        },
        {
          "name": "CVE-2021-20293",
          "software": "cpe:2.3:a:org.jboss.resteasy:resteasy-jaxrs:3.1.4.Final:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A reflected Cross-Site Scripting (XSS) flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final, where it did not properly handle URL encoding when calling @javax.ws.rs.PathParam without any @Produces MediaType. This flaw allows an attacker to launch a reflected XSS attack. The highest threat from this vulnerability is to data confidentiality and integrity."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar (shaded: org.yaml:snakeyaml:1.15)",
      "alerts": 1,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2017-18640",
          "software": "cpe:2.3:a:snakeyaml_project:snakeyaml:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-fat.jar",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-20291",
          "software": "cpe:2.3:a:storage_project:storage:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS)."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-20291",
          "software": "cpe:2.3:a:storage_project:storage:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS)."
        }
      ]
    },
    {
      "package": "add-storage-openstack-0.0.1-SNAPSHOT.jar",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2021-20291",
          "software": "cpe:2.3:a:storage_project:storage:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS)."
        }
      ]
    },
    {
      "package": "configure-db-mysql-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "configure-db-mysql-0.0.1-SNAPSHOT.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "configure-dbms-mysql-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "configure-dbms-mysql-0.0.1-SNAPSHOT.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "configure-wa-wordpress-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 239,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2003-1598",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in log.header.php in WordPress 0.7 and earlier allows remote attackers to execute arbitrary SQL commands via the posts variable."
        },
        {
          "name": "CVE-2005-1102",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in template-functions-post.php in WordPress 1.5 and earlier allow remote attackers to execute arbitrary commands via the (1) content or (2) title of the post."
        },
        {
          "name": "CVE-2005-1688",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Wordpress 1.5 and earlier allows remote attackers to obtain sensitive information via a direct request to files in (1) wp-content/themes/, (2) wp-includes/, or (3) wp-admin/, which reveal the path in an error message."
        },
        {
          "name": "CVE-2006-1796",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the paging links functionality in template-functions-links.php in Wordpress 1.5.2, and possibly other versions before 2.0.1, allows remote attackers to inject arbitrary web script or HTML to Internet Explorer users via the request URI ($_SERVER['REQUEST_URI'])."
        },
        {
          "name": "CVE-2006-2667",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Direct static code injection vulnerability in WordPress 2.0.2 and earlier allows remote attackers to execute arbitrary commands by inserting a carriage return and PHP code when updating a profile, which is appended after a special comment sequence into files in (1) wp-content/cache/userlogins/ (2) wp-content/cache/users/ which are later included by cache.php, as demonstrated using the displayname argument."
        },
        {
          "name": "CVE-2006-5705",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple directory traversal vulnerabilities in plugins/wp-db-backup.php in WordPress before 2.0.5 allow remote authenticated users to read or overwrite arbitrary files via directory traversal sequences in the (1) backup and (2) fragment parameters in a GET request."
        },
        {
          "name": "CVE-2006-6016",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/user-edit.php in WordPress before 2.0.5 allows remote authenticated users to read the metadata of an arbitrary user via a modified user_id parameter."
        },
        {
          "name": "CVE-2006-6017",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.0.5 does not properly store a profile containing a string representation of a serialized object, which allows remote authenticated users to cause a denial of service (application crash) via a string that represents a (1) malformed or (2) large serialized object, because the object triggers automatic unserialization for display."
        },
        {
          "name": "CVE-2006-6808",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/templates.php in WordPress 2.0.5 allows remote attackers to inject arbitrary web script or HTML via the file parameter.  NOTE: some sources have reported this as a vulnerability in the get_file_description function in wp-admin/admin-functions.php."
        },
        {
          "name": "CVE-2007-0107",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.0.6, when mbstring is enabled for PHP, decodes alternate character sets after escaping the SQL query, which allows remote attackers to bypass SQL injection protection schemes and execute arbitrary SQL commands via multibyte charsets, as demonstrated using UTF-7."
        },
        {
          "name": "CVE-2007-0539",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The wp_remote_fopen function in WordPress before 2.1 allows remote attackers to cause a denial of service (bandwidth or thread consumption) via pingback service calls with a source URI that corresponds to a large file, which triggers a long download session without a timeout constraint."
        },
        {
          "name": "CVE-2007-0540",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress allows remote attackers to cause a denial of service (bandwidth or thread consumption) via pingback service calls with a source URI that corresponds to a file with a binary content type, which is downloaded even though it cannot contain usable pingback data."
        },
        {
          "name": "CVE-2007-0541",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress allows remote attackers to determine the existence of arbitrary files, and possibly read portions of certain files, via pingback service calls with a source URI that corresponds to a local pathname, which triggers different fault codes for existing and non-existing files, and in certain configurations causes a brief file excerpt to be published as a blog comment."
        },
        {
          "name": "CVE-2007-1244",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the AdminPanel in WordPress 2.1.1 and earlier allows remote attackers to perform privileged actions as administrators, as demonstrated using the delete action in wp-admin/post.php.  NOTE: this issue can be leveraged to perform cross-site scripting (XSS) attacks and steal cookies via the post parameter."
        },
        {
          "name": "CVE-2007-1893",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "xmlrpc (xmlrpc.php) in WordPress 2.1.2, and probably earlier, allows remote authenticated users with the contributor role to bypass intended access restrictions and invoke the publish_posts functionality, which can be used to \"publish a previously saved post.\""
        },
        {
          "name": "CVE-2007-1897",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "SQL injection vulnerability in xmlrpc (xmlrpc.php) in WordPress 2.1.2, and probably earlier, allows remote authenticated users to execute arbitrary SQL commands via a string parameter value in an XML RPC mt.setPostCategories method call, related to the post_id variable."
        },
        {
          "name": "CVE-2007-2627",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in sidebar.php in WordPress, when custom 404 pages that call get_sidebar are used, allows remote attackers to inject arbitrary web script or HTML via the query string (PHP_SELF), a different vulnerability than CVE-2007-1622."
        },
        {
          "name": "CVE-2007-2821",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in wp-admin/admin-ajax.php in WordPress before 2.2 allows remote attackers to execute arbitrary SQL commands via the cookie parameter."
        },
        {
          "name": "CVE-2007-3543",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unrestricted file upload vulnerability in WordPress before 2.2.1 and WordPress MU before 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code by making a post that specifies a .php filename in the _wp_attached_file metadata field; and then sending this file's content, along with its post_ID value, to (1) wp-app.php or (2) app.php."
        },
        {
          "name": "CVE-2007-3544",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unrestricted file upload vulnerability in (1) wp-app.php and (2) app.php in WordPress 2.2.1 and WordPress MU 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code via unspecified vectors, possibly related to the wp_postmeta table and the use of custom fields in normal (non-attachment) posts.  NOTE: this issue reportedly exists because of an incomplete fix for CVE-2007-3543."
        },
        {
          "name": "CVE-2007-3639",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.2.2 allows remote attackers to redirect visitors to other websites and potentially obtain sensitive information via (1) the _wp_http_referer parameter to wp-pass.php, related to the wp_get_referer function in wp-includes/functions.php; and possibly other vectors related to (2) wp-includes/pluggable.php and (3) the wp_nonce_ays function in wp-includes/functions.php."
        },
        {
          "name": "CVE-2007-4165",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in index.php in the Blue Memories theme 1.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the s parameter, possibly a related issue to CVE-2007-2757 and CVE-2007-4014.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
        },
        {
          "name": "CVE-2007-6677",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in Peter's Random Anti-Spam Image 0.2.4 and earlier plugin for WordPress allows remote attackers to inject arbitrary web script or HTML via the comment field in the comment form."
        },
        {
          "name": "CVE-2008-0192",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress 2.0.9 and earlier allow remote attackers to inject arbitrary web script or HTML via the popuptitle parameter to (1) wp-admin/post.php or (2) wp-admin/page-new.php."
        },
        {
          "name": "CVE-2008-0193",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-db-backup.php in WordPress 2.0.11 and earlier, and possibly 2.1.x through 2.3.x, allows remote attackers to inject arbitrary web script or HTML via the backup parameter in a wp-db-backup.php action to wp-admin/edit.php."
        },
        {
          "name": "CVE-2008-0194",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in wp-db-backup.php in WordPress 2.0.3 and earlier allows remote attackers to read arbitrary files, delete arbitrary files, and cause a denial of service via a .. (dot dot) in the backup parameter in a wp-db-backup.php action to wp-admin/edit.php.  NOTE: this might be the same as CVE-2006-5705.1."
        },
        {
          "name": "CVE-2008-0195",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress 2.0.11 and earlier allows remote attackers to obtain sensitive information via an empty value of the page parameter to certain PHP scripts under wp-admin/, which reveals the path in various error messages."
        },
        {
          "name": "CVE-2008-0196",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple directory traversal vulnerabilities in WordPress 2.0.11 and earlier allow remote attackers to read arbitrary files via a .. (dot dot) in (1) the page parameter to certain PHP scripts under wp-admin/ or (2) the import parameter to wp-admin/admin.php, as demonstrated by discovering the full path via a request for the \\..\\..\\wp-config pathname; and allow remote attackers to modify arbitrary files via a .. (dot dot) in the file parameter to wp-admin/templates.php."
        },
        {
          "name": "CVE-2008-0198",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site request forgery (CSRF) vulnerabilities in wp-contact-form/options-contactform.php in the WP-ContactForm 1.5 alpha and earlier plugin for WordPress allow remote attackers to perform actions as administrators via the (1) wpcf_question, (2) wpcf_success_msg, or (3) wpcf_error_msg parameter to wp-admin/admin.php."
        },
        {
          "name": "CVE-2008-0491",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in fim_rss.php in the fGallery 2.4.1 plugin for WordPress allows remote attackers to execute arbitrary SQL commands via the album parameter."
        },
        {
          "name": "CVE-2008-0615",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Directory traversal vulnerability in wp-admin/admin.php in the DMSGuestbook 1.8.0 and 1.7.0 plugin for WordPress allows remote authenticated users to read arbitrary files via a .. (dot dot) in the (1) folder and (2) file parameters."
        },
        {
          "name": "CVE-2008-0616",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "SQL injection vulnerability in the administration panel in the DMSGuestbook 1.7.0 plugin for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via unspecified vectors.  NOTE: it is not clear whether this issue crosses privilege boundaries."
        },
        {
          "name": "CVE-2008-0617",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in the DMSGuestbook 1.7.0 plugin for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) file parameter to wp-admin/admin.php, or the (2) messagefield parameter in the guestbook page, and the (3) title parameter in the messagearea."
        },
        {
          "name": "CVE-2008-0618",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in the DMSGuestbook 1.8.0 and 1.7.0 plugin for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) gbname, (2) gbemail, (3) gburl, and (4) gbmsg parameters to unspecified programs.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
        },
        {
          "name": "CVE-2008-2146",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-includes/vars.php in Wordpress before 2.2.3 does not properly extract the current path from the PATH_INFO ($PHP_SELF), which allows remote attackers to bypass intended access restrictions for certain pages."
        },
        {
          "name": "CVE-2008-2392",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Unrestricted file upload vulnerability in WordPress 2.5.1 and earlier might allow remote authenticated administrators to upload and execute arbitrary PHP files via the Upload section in the Write Tabs area of the dashboard."
        },
        {
          "name": "CVE-2008-3233",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 2.6, SVN development versions only, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2008-4106",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.6.2 does not properly handle MySQL warnings about insertion of username strings that exceed the maximum column width of the user_login column, and does not properly handle space characters when comparing usernames, which allows remote attackers to change an arbitrary user's password to a random value by registering a similar username and then requesting a password reset, related to a \"SQL column truncation vulnerability.\" NOTE: the attacker can discover the random password by also exploiting CVE-2008-4107."
        },
        {
          "name": "CVE-2008-4769",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in the get_category_template function in wp-includes/theme.php in WordPress 2.3.3 and earlier, and 2.5, allows remote attackers to include and possibly execute arbitrary PHP files via the cat parameter in index.php.  NOTE: some of these details are obtained from third party information."
        },
        {
          "name": "CVE-2008-4796",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The _httpsrequest function (Snoopy/Snoopy.class.php) in Snoopy 1.2.3 and earlier, as used in (1) ampache, (2) libphp-snoopy, (3) mahara, (4) mediamate, (5) opendb, (6) pixelpost, and possibly other products, allows remote attackers to execute arbitrary commands via shell metacharacters in https URLs."
        },
        {
          "name": "CVE-2008-5278",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the self_link function in in the RSS Feed Generator (wp-includes/feed.php) for WordPress before 2.6.5 allows remote attackers to inject arbitrary web script or HTML via the Host header (HTTP_HOST variable)."
        },
        {
          "name": "CVE-2008-5695",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-admin/options.php in WordPress MU before 1.3.2, and WordPress 2.3.2 and earlier, does not properly validate requests to update an option, which allows remote authenticated users with manage_options and upload_files capabilities to execute arbitrary code by uploading a PHP script and adding this script's pathname to active_plugins."
        },
        {
          "name": "CVE-2009-2334",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/admin.php in WordPress and WordPress MU before 2.8.1 does not require administrative authentication to access the configuration of a plugin, which allows remote attackers to specify a configuration file in the page parameter to obtain sensitive information or modify this file, as demonstrated by the (1) collapsing-archives/options.txt, (2) akismet/readme.txt, (3) related-ways-to-take-action/options.php, (4) wp-security-scan/securityscan.php, and (5) wp-ids/ids-admin.php files. NOTE: this can be leveraged for cross-site scripting (XSS) and denial of service."
        },
        {
          "name": "CVE-2009-2335",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress and WordPress MU before 2.8.1 exhibit different behavior for a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \"user convenience.\""
        },
        {
          "name": "CVE-2009-2336",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The forgotten mail interface in WordPress and WordPress MU before 2.8.1 exhibits different behavior for a password request depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \"user convenience.\""
        },
        {
          "name": "CVE-2009-2432",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress and WordPress MU before 2.8.1 allow remote attackers to obtain sensitive information via a direct request to wp-settings.php, which reveals the installation path in an error message."
        },
        {
          "name": "CVE-2009-2762",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-login.php in WordPress 2.8.3 and earlier allows remote attackers to force a password reset for the first user in the database, possibly the administrator, via a key[] array variable in a resetpass (aka rp) action, which bypasses a check that assumes that $key is not an array."
        },
        {
          "name": "CVE-2009-2851",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the administrator interface in WordPress before 2.8.2 allows remote attackers to inject arbitrary web script or HTML via a comment author URL."
        },
        {
          "name": "CVE-2009-2854",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Wordpress before 2.8.3 does not check capabilities for certain actions, which allows remote attackers to make unauthorized edits or additions via a direct request to (1) edit-comments.php, (2) edit-pages.php, (3) edit.php, (4) edit-category-form.php, (5) edit-link-category-form.php, (6) edit-tag-form.php, (7) export.php, (8) import.php, or (9) link-add.php in wp-admin/."
        },
        {
          "name": "CVE-2009-3622",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Algorithmic complexity vulnerability in wp-trackback.php in WordPress before 2.8.5 allows remote attackers to cause a denial of service (CPU consumption and server hang) via a long title parameter in conjunction with a charset parameter composed of many comma-separated \"UTF-8\" substrings, related to the mb_convert_encoding function in PHP."
        },
        {
          "name": "CVE-2009-3890",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unrestricted file upload vulnerability in the wp_check_filetype function in wp-includes/functions.php in WordPress before 2.8.6, when a certain configuration of the mod_mime module in the Apache HTTP Server is enabled, allows remote authenticated users to execute arbitrary code by posting an attachment with a multiple-extension filename, and then accessing this attachment via a direct request to a wp-content/uploads/ pathname, as demonstrated by a .php.jpg filename."
        },
        {
          "name": "CVE-2009-3891",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/press-this.php in WordPress before 2.8.6 allows remote authenticated users to inject arbitrary web script or HTML via the s parameter (aka the selection variable)."
        },
        {
          "name": "CVE-2010-4257",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "SQL injection vulnerability in the do_trackbacks function in wp-includes/comment.php in WordPress before 3.0.2 allows remote authenticated users to execute arbitrary SQL commands via the Send Trackbacks field."
        },
        {
          "name": "CVE-2010-4536",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in KSES, as used in WordPress before 3.0.4, allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) the & (ampersand) character, (2) the case of an attribute name, (3) a padded entity, and (4) an entity that is not in normalized form."
        },
        {
          "name": "CVE-2010-5106",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The XML-RPC remote publishing interface in xmlrpc.php in WordPress before 3.0.3 does not properly check capabilities, which allows remote authenticated users to bypass intended access restrictions, and publish, edit, or delete posts, by leveraging the Author or Contributor role."
        },
        {
          "name": "CVE-2010-5293",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/comment.php in WordPress before 3.0.2 does not properly whitelist trackbacks and pingbacks in the blogroll, which allows remote attackers to bypass intended spam restrictions via a crafted URL, as demonstrated by a URL that triggers a substring match."
        },
        {
          "name": "CVE-2010-5294",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in the request_filesystem_credentials function in wp-admin/includes/file.php in WordPress before 3.0.2 allow remote servers to inject arbitrary web script or HTML by providing a crafted error message for a (1) FTP or (2) SSH connection attempt."
        },
        {
          "name": "CVE-2010-5295",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/plugins.php in WordPress before 3.0.2 might allow remote attackers to inject arbitrary web script or HTML via a plugin's author field, which is not properly handled during a Delete Plugin action."
        },
        {
          "name": "CVE-2010-5296",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/capabilities.php in WordPress before 3.0.2, when a Multisite configuration is used, does not require the Super Admin role for the delete_users capability, which allows remote authenticated administrators to bypass intended access restrictions via a delete action."
        },
        {
          "name": "CVE-2010-5297",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "WordPress before 3.0.1, when a Multisite installation is used, permanently retains the \"site administrators can add users\" option once changed, which might allow remote authenticated administrators to bypass intended access restrictions in opportunistic circumstances via an add action after a temporary change."
        },
        {
          "name": "CVE-2011-0700",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.0.5 allow remote authenticated users to inject arbitrary web script or HTML via vectors related to (1) the Quick/Bulk Edit title (aka post title or post_title), (2) post_status, (3) comment_status, (4) ping_status, and (5) escaping of tags within the tags meta box."
        },
        {
          "name": "CVE-2011-0701",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/async-upload.php in the media uploader in WordPress before 3.0.5 allows remote authenticated users to read (1) draft posts or (2) private posts via a modified attachment_id parameter."
        },
        {
          "name": "CVE-2011-4898",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier generates different error messages for requests lacking a dbname parameter depending on whether the MySQL credentials are valid, which makes it easier for remote attackers to conduct brute-force attacks via a series of requests with different uname and pwd parameters.  NOTE: the vendor disputes the significance of this issue; also, it is unclear whether providing intentionally vague error messages during installation would be reasonable from a usability perspective."
        },
        {
          "name": "CVE-2011-4899",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "** DISPUTED ** wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier does not ensure that the specified MySQL database service is appropriate, which allows remote attackers to configure an arbitrary database via the dbhost and dbname parameters, and subsequently conduct static code injection and cross-site scripting (XSS) attacks via (1) an HTTP request or (2) a MySQL query.  NOTE: the vendor disputes the significance of this issue; however, remote code execution makes the issue important in many realistic environments."
        },
        {
          "name": "CVE-2011-4956",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 3.1.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2011-4957",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The make_clickable function in wp-includes/formatting.php in WordPress before 3.1.1 does not properly check URLs before passing them to the PCRE library, which allows remote attackers to cause a denial of service (crash) via a comment with a crafted URL that triggers many recursive calls."
        },
        {
          "name": "CVE-2011-5270",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/press-this.php in WordPress before 3.0.6 does not enforce the publish_posts capability requirement, which allows remote authenticated users to perform publish actions by leveraging the Contributor role."
        },
        {
          "name": "CVE-2012-0782",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** Multiple cross-site scripting (XSS) vulnerabilities in wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) dbhost, (2) dbname, or (3) uname parameter. NOTE: the vendor disputes the significance of this issue; also, it is unclear whether this specific XSS scenario has security relevance."
        },
        {
          "name": "CVE-2012-0937",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier does not limit the number of MySQL queries sent to external MySQL database servers, which allows remote attackers to use WordPress as a proxy for brute-force attacks or denial of service attacks via the dbhost parameter, a different vulnerability than CVE-2011-4898.  NOTE: the vendor disputes the significance of this issue because an incomplete WordPress installation might be present on the network for only a short time."
        },
        {
          "name": "CVE-2012-1936",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** The wp_create_nonce function in wp-includes/pluggable.php in WordPress 3.3.1 and earlier associates a nonce with a user account instead of a user session, which might make it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks on specific actions and objects by sniffing the network, as demonstrated by attacks against the wp-admin/admin-ajax.php and wp-admin/user-new.php scripts.  NOTE: the vendor reportedly disputes the significance of this issue because wp_create_nonce operates as intended, even if it is arguably inconsistent with certain CSRF protection details advocated by external organizations."
        },
        {
          "name": "CVE-2012-2399",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFupload 2.2.0.1 and earlier, as used in WordPress before 3.5.2, TinyMCE Image Manager 1.1 and earlier, and other products allows remote attackers to inject arbitrary web script or HTML via the buttonText parameter, a different vulnerability than CVE-2012-3414."
        },
        {
          "name": "CVE-2012-2400",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Unspecified vulnerability in wp-includes/js/swfobject.js in WordPress before 3.3.2 has unknown impact and attack vectors."
        },
        {
          "name": "CVE-2012-2401",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Plupload before 1.5.4, as used in wp-includes/js/plupload/ in WordPress before 3.3.2 and other products, enables scripting regardless of the domain from which the SWF content was loaded, which allows remote attackers to bypass the Same Origin Policy via crafted content."
        },
        {
          "name": "CVE-2012-2402",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/plugins.php in WordPress before 3.3.2 allows remote authenticated site administrators to bypass intended access restrictions and deactivate network-wide plugins via unspecified vectors."
        },
        {
          "name": "CVE-2012-2403",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/formatting.php in WordPress before 3.3.2 attempts to enable clickable links inside attributes, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors."
        },
        {
          "name": "CVE-2012-2404",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-comments-post.php in WordPress before 3.3.2 supports offsite redirects, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors."
        },
        {
          "name": "CVE-2012-3384",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the customizer in WordPress before 3.4.1 allows remote attackers to hijack the authentication of unspecified victims via unknown vectors."
        },
        {
          "name": "CVE-2012-3385",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.4.1 does not properly restrict access to post contents such as private or draft posts, which allows remote authors or contributors to obtain sensitive information via unknown vectors."
        },
        {
          "name": "CVE-2012-3414",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFUpload 2.2.0.1 and earlier, as used in WordPress before 3.3.2, TinyMCE Image Manager 1.1, and other products, allows remote attackers to inject arbitrary web script or HTML via the movieName parameter, related to the \"ExternalInterface.call\" function."
        },
        {
          "name": "CVE-2012-4421",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The create_post function in wp-includes/class-wp-atom-server.php in WordPress before 3.4.2 does not perform a capability check, which allows remote authenticated users to bypass intended access restrictions and publish new posts by leveraging the Contributor role and using the Atom Publishing Protocol (aka AtomPub) feature."
        },
        {
          "name": "CVE-2012-4422",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "wp-admin/plugins.php in WordPress before 3.4.2, when the multisite feature is enabled, does not check for network-administrator privileges before performing a network-wide activation of an installed plugin, which might allow remote authenticated users to make unintended plugin changes by leveraging the Administrator role."
        },
        {
          "name": "CVE-2012-6633",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/default-filters.php in WordPress before 3.3.3 allows remote attackers to inject arbitrary web script or HTML via an editable slug field."
        },
        {
          "name": "CVE-2012-6634",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/media-upload.php in WordPress before 3.3.3 allows remote attackers to obtain sensitive information or bypass intended media-attachment restrictions via a post_id value."
        },
        {
          "name": "CVE-2012-6635",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/includes/class-wp-posts-list-table.php in WordPress before 3.3.3 does not properly restrict excerpt-view access, which allows remote authenticated users to obtain sensitive information by visiting a draft."
        },
        {
          "name": "CVE-2012-6707",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress through 4.8.2 uses a weak MD5-based password hashing algorithm, which makes it easier for attackers to determine cleartext values by leveraging access to the hash values. NOTE: the approach to changing this may not be fully compatible with certain use cases, such as migration of a WordPress site from a web host that uses a recent PHP version to a different web host that uses PHP 5.2. These use cases are plausible (but very unlikely) based on statistics showing widespread deployment of WordPress with obsolete PHP versions."
        },
        {
          "name": "CVE-2013-0235",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The XMLRPC API in WordPress before 3.5.1 allows remote attackers to send HTTP requests to intranet servers, and conduct port-scanning attacks, by specifying a crafted source URL for a pingback, related to a Server-Side Request Forgery (SSRF) issue."
        },
        {
          "name": "CVE-2013-0236",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.1 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) gallery shortcodes or (2) the content of a post."
        },
        {
          "name": "CVE-2013-0237",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in Plupload.as in Moxiecode plupload before 1.5.5, as used in WordPress before 3.5.1 and other products, allows remote attackers to inject arbitrary web script or HTML via the id parameter."
        },
        {
          "name": "CVE-2013-2199",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The HTTP API in WordPress before 3.5.2 allows remote attackers to send HTTP requests to intranet servers via unspecified vectors, related to a Server-Side Request Forgery (SSRF) issue, a similar vulnerability to CVE-2013-0235."
        },
        {
          "name": "CVE-2013-2200",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.5.2 does not properly check the capabilities of roles, which allows remote authenticated users to bypass intended restrictions on publishing and authorship reassignment via unspecified vectors."
        },
        {
          "name": "CVE-2013-2201",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.2 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) uploads of media files, (2) editing of media files, (3) installation of plugins, (4) updates to plugins, (5) installation of themes, or (6) updates to themes."
        },
        {
          "name": "CVE-2013-2202",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.5.2 allows remote attackers to read arbitrary files via an oEmbed XML provider response containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue."
        },
        {
          "name": "CVE-2013-2203",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.5.2, when the uploads directory forbids write access, allows remote attackers to obtain sensitive information via an invalid upload request, which reveals the absolute path in an XMLHttpRequest error message."
        },
        {
          "name": "CVE-2013-2204",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "moxieplayer.as in Moxiecode moxieplayer, as used in the TinyMCE Media plugin in WordPress before 3.5.2 and other products, does not consider the presence of a # (pound sign) character during extraction of the QUERY_STRING, which allows remote attackers to pass arbitrary parameters to a Flash application, and conduct content-spoofing attacks, via a crafted string after a ? (question mark) character."
        },
        {
          "name": "CVE-2013-2205",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The default configuration of SWFUpload in WordPress before 3.5.2 has an unrestrictive security.allowDomain setting, which allows remote attackers to bypass the Same Origin Policy and conduct cross-site scripting (XSS) attacks via a crafted web site."
        },
        {
          "name": "CVE-2013-4338",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-includes/functions.php in WordPress before 3.6.1 does not properly determine whether data has been serialized, which allows remote attackers to execute arbitrary code by triggering erroneous PHP unserialize operations."
        },
        {
          "name": "CVE-2013-4339",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 3.6.1 does not properly validate URLs before use in an HTTP redirect, which allows remote attackers to bypass intended redirection restrictions via a crafted string."
        },
        {
          "name": "CVE-2013-4340",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "wp-admin/includes/post.php in WordPress before 3.6.1 allows remote authenticated users to spoof the authorship of a post by leveraging the Author role and providing a modified user_ID parameter."
        },
        {
          "name": "CVE-2013-5738",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The get_allowed_mime_types function in wp-includes/functions.php in WordPress before 3.6.1 does not require the unfiltered_html capability for uploads of .htm and .html files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file."
        },
        {
          "name": "CVE-2013-5739",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "The default configuration of WordPress before 3.6.1 does not prevent uploads of .swf and .exe files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file, related to the get_allowed_mime_types function in wp-includes/functions.php."
        },
        {
          "name": "CVE-2013-7233",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the retrospam component in wp-admin/options-discussion.php in WordPress 2.0.11 and earlier allows remote attackers to hijack the authentication of administrators for requests that move comments to the moderation list."
        },
        {
          "name": "CVE-2014-0165",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.7.2 and 3.8.x before 3.8.2 allows remote authenticated users to publish posts by leveraging the Contributor role, related to wp-admin/includes/post.php and wp-admin/includes/class-wp-posts-list-table.php."
        },
        {
          "name": "CVE-2014-0166",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The wp_validate_auth_cookie function in wp-includes/pluggable.php in WordPress before 3.7.2 and 3.8.x before 3.8.2 does not properly determine the validity of authentication cookies, which makes it easier for remote attackers to obtain access via a forged cookie."
        },
        {
          "name": "CVE-2014-5204",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/pluggable.php in WordPress before 3.9.2 rejects invalid CSRF nonces with a different timing depending on which characters in the nonce are incorrect, which makes it easier for remote attackers to bypass a CSRF protection mechanism via a brute-force attack."
        },
        {
          "name": "CVE-2014-5205",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/pluggable.php in WordPress before 3.9.2 does not use delimiters during concatenation of action values and uid values in CSRF tokens, which makes it easier for remote attackers to bypass a CSRF protection mechanism via a brute-force attack."
        },
        {
          "name": "CVE-2014-5240",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/pluggable.php in WordPress before 3.9.2, when Multisite is enabled, allows remote authenticated administrators to inject arbitrary web script or HTML, and obtain Super Admin privileges, via a crafted avatar URL."
        },
        {
          "name": "CVE-2014-5265",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The Incutio XML-RPC (IXR) Library, as used in WordPress before 3.9.2 and Drupal 6.x before 6.33 and 7.x before 7.31, permits entity declarations without considering recursion during entity expansion, which allows remote attackers to cause a denial of service (memory and CPU consumption) via a crafted XML document containing a large number of nested entity references, a similar issue to CVE-2003-1564."
        },
        {
          "name": "CVE-2014-5266",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The Incutio XML-RPC (IXR) Library, as used in WordPress before 3.9.2 and Drupal 6.x before 6.33 and 7.x before 7.31, does not limit the number of elements in an XML document, which allows remote attackers to cause a denial of service (CPU consumption) via a large document, a different vulnerability than CVE-2014-5265."
        },
        {
          "name": "CVE-2014-6412",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.4 makes it easier for remote attackers to predict password-recovery tokens via a brute-force approach."
        },
        {
          "name": "CVE-2014-9031",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the wptexturize function in WordPress before 3.7.5, 3.8.x before 3.8.5, and 3.9.x before 3.9.3 allows remote attackers to inject arbitrary web script or HTML via crafted use of shortcode brackets in a text field, as demonstrated by a comment or a post."
        },
        {
          "name": "CVE-2014-9034",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/class-phpass.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to cause a denial of service (CPU consumption) via a long password that is improperly handled during hashing, a similar issue to CVE-2014-9016."
        },
        {
          "name": "CVE-2014-9035",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in Press This in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2014-9036",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to inject arbitrary web script or HTML via a crafted Cascading Style Sheets (CSS) token sequence in a post."
        },
        {
          "name": "CVE-2014-9037",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 might allow remote attackers to obtain access to an account idle since 2008 by leveraging an improper PHP dynamic type comparison for an MD5 hash."
        },
        {
          "name": "CVE-2014-9038",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/http.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to conduct server-side request forgery (SSRF) attacks by referring to a 127.0.0.0/8 resource."
        },
        {
          "name": "CVE-2014-9039",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-login.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 might allow remote attackers to reset passwords by leveraging access to an e-mail account that received a password-reset message."
        },
        {
          "name": "CVE-2015-2213",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in the wp_untrash_post_comments function in wp-includes/post.php in WordPress before 4.2.4 allows remote attackers to execute arbitrary SQL commands via a comment that is mishandled after retrieval from the trash."
        },
        {
          "name": "CVE-2015-3438",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 4.1.2, when MySQL is used without strict mode, allow remote attackers to inject arbitrary web script or HTML via a (1) four-byte UTF-8 character or (2) invalid character that reaches the database layer, as demonstrated by a crafted character in a comment."
        },
        {
          "name": "CVE-2015-3440",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.1 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type."
        },
        {
          "name": "CVE-2015-5622",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 4.2.3 allows remote authenticated users to inject arbitrary web script or HTML by leveraging the Author or Contributor role to place a crafted shortcode inside an HTML element, related to wp-includes/kses.php and wp-includes/shortcodes.php."
        },
        {
          "name": "CVE-2015-5623",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 4.2.3 does not properly verify the edit_posts capability, which allows remote authenticated users to bypass intended access restrictions and create drafts by leveraging the Subscriber role, as demonstrated by a post-quickdraft-save action to wp-admin/post.php."
        },
        {
          "name": "CVE-2015-5714",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 4.3.1 allows remote attackers to inject arbitrary web script or HTML by leveraging the mishandling of unclosed HTML elements during processing of shortcode tags."
        },
        {
          "name": "CVE-2015-5715",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mw_editPost function in wp-includes/class-wp-xmlrpc-server.php in the XMLRPC subsystem in WordPress before 4.3.1 allows remote authenticated users to bypass intended access restrictions, and arrange for a private post to be published and sticky, via unspecified vectors."
        },
        {
          "name": "CVE-2015-5730",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The sanitize_widget_instance function in wp-includes/class-wp-customize-widgets.php in WordPress before 4.2.4 does not use a constant-time comparison for widgets, which allows remote attackers to conduct a timing side-channel attack by measuring the delay before inequality is calculated."
        },
        {
          "name": "CVE-2015-5731",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in wp-admin/post.php in WordPress before 4.2.4 allows remote attackers to hijack the authentication of administrators for requests that lock a post, and consequently cause a denial of service (editing blockage), via a get-post-lock action."
        },
        {
          "name": "CVE-2015-5732",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the form function in the WP_Nav_Menu_Widget class in wp-includes/default-widgets.php in WordPress before 4.2.4 allows remote attackers to inject arbitrary web script or HTML via a widget title."
        },
        {
          "name": "CVE-2015-5733",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the refreshAdvancedAccessibilityOfItem function in wp-admin/js/nav-menu.js in WordPress before 4.2.4 allows remote attackers to inject arbitrary web script or HTML via an accessibility-helper title."
        },
        {
          "name": "CVE-2015-5734",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the legacy theme preview implementation in wp-includes/theme.php in WordPress before 4.2.4 allows remote attackers to inject arbitrary web script or HTML via a crafted string."
        },
        {
          "name": "CVE-2015-7989",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the user list table in WordPress before 4.3.1 allows remote authenticated users to inject arbitrary web script or HTML via a crafted e-mail address, a different vulnerability than CVE-2015-5714."
        },
        {
          "name": "CVE-2015-8834",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.2 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-3440."
        },
        {
          "name": "CVE-2016-10033",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "The mailSend function in the isMail transport in PHPMailer before 5.2.18 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code via a \\\" (backslash double quote) in a crafted Sender property."
        },
        {
          "name": "CVE-2016-10045",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "The isMail transport in PHPMailer before 5.2.20 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code by leveraging improper interaction between the escapeshellarg function and internal escaping performed in the mail function in PHP. NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-10033."
        },
        {
          "name": "CVE-2016-10148",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The wp_ajax_update_plugin function in wp-admin/includes/ajax-actions.php in WordPress before 4.6 makes a get_plugin_data call before checking the update_plugins capability, which allows remote authenticated users to bypass intended read-access restrictions via the plugin parameter to wp-admin/admin-ajax.php, a related issue to CVE-2016-6896."
        },
        {
          "name": "CVE-2016-1564",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in wp-includes/class-wp-theme.php in WordPress before 4.4.1 allow remote attackers to inject arbitrary web script or HTML via a (1) stylesheet name or (2) template name to wp-admin/customize.php."
        },
        {
          "name": "CVE-2016-2221",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Open redirect vulnerability in the wp_validate_redirect function in wp-includes/pluggable.php in WordPress before 4.4.2 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a malformed URL that triggers incorrect hostname parsing, as demonstrated by an https:example.com URL."
        },
        {
          "name": "CVE-2016-4029",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5 does not consider octal and hexadecimal IP address formats when determining an intranet address, which allows remote attackers to bypass an intended SSRF protection mechanism via a crafted address."
        },
        {
          "name": "CVE-2016-4566",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in plupload.flash.swf in Plupload before 2.1.9, as used in WordPress before 4.5.2, allows remote attackers to inject arbitrary web script or HTML via a Same-Origin Method Execution (SOME) attack."
        },
        {
          "name": "CVE-2016-4567",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in flash/FlashMediaElement.as in MediaElement.js before 2.21.0, as used in WordPress before 4.5.2, allows remote attackers to inject arbitrary web script or HTML via an obfuscated form of the jsinitfunction parameter, as demonstrated by \"jsinitfunctio%gn.\""
        },
        {
          "name": "CVE-2016-5832",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The customizer in WordPress before 4.5.3 allows remote attackers to bypass intended redirection restrictions via unspecified vectors."
        },
        {
          "name": "CVE-2016-5833",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the column_title function in wp-admin/includes/class-wp-media-list-table.php in WordPress before 4.5.3 allows remote attackers to inject arbitrary web script or HTML via a crafted attachment name, a different vulnerability than CVE-2016-5834."
        },
        {
          "name": "CVE-2016-5834",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the wp_get_attachment_link function in wp-includes/post-template.php in WordPress before 4.5.3 allows remote attackers to inject arbitrary web script or HTML via a crafted attachment name, a different vulnerability than CVE-2016-5833."
        },
        {
          "name": "CVE-2016-5835",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to obtain sensitive revision-history information by leveraging the ability to read a post, related to wp-admin/includes/ajax-actions.php and wp-admin/revision.php."
        },
        {
          "name": "CVE-2016-5836",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The oEmbed protocol implementation in WordPress before 4.5.3 allows remote attackers to cause a denial of service via unspecified vectors."
        },
        {
          "name": "CVE-2016-5837",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to bypass intended access restrictions and remove a category attribute from a post via unspecified vectors."
        },
        {
          "name": "CVE-2016-5838",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to bypass intended password-change restrictions by leveraging knowledge of a cookie."
        },
        {
          "name": "CVE-2016-5839",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to bypass the sanitize_file_name protection mechanism via unspecified vectors."
        },
        {
          "name": "CVE-2016-6634",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the network settings page in WordPress before 4.5 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2016-6635",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site request forgery (CSRF) vulnerability in the wp_ajax_wp_compression_test function in wp-admin/includes/ajax-actions.php in WordPress before 4.5 allows remote attackers to hijack the authentication of administrators for requests that change the script compression option."
        },
        {
          "name": "CVE-2016-6897",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the wp_ajax_update_plugin function in wp-admin/includes/ajax-actions.php in WordPress before 4.6 allows remote attackers to hijack the authentication of subscribers for /dev/random read operations by leveraging a late call to the check_ajax_referer function, a related issue to CVE-2016-6896."
        },
        {
          "name": "CVE-2016-7168",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the media_handle_upload function in wp-admin/includes/media.php in WordPress before 4.6.1 might allow remote attackers to inject arbitrary web script or HTML by tricking an administrator into uploading an image file that has a crafted filename."
        },
        {
          "name": "CVE-2016-7169",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Directory traversal vulnerability in the File_Upload_Upgrader class in wp-admin/includes/class-file-upload-upgrader.php in the upgrade package uploader in WordPress before 4.6.1 allows remote authenticated users to access arbitrary files via a crafted urlholder parameter."
        },
        {
          "name": "CVE-2016-9263",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress through 4.8.2, when domain-based flashmediaelement.swf sandboxing is not used, allows remote attackers to conduct cross-domain Flash injection (XSF) attacks by leveraging code contained within the wp-includes/js/mediaelement/flashmediaelement.swf file."
        },
        {
          "name": "CVE-2017-1000600",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress version <4.9 contains a CWE-20 Input Validation vulnerability in thumbnail processing that can result in remote code execution. This attack appears to be exploitable via thumbnail upload by an authenticated user and may require additional plugins in order to be exploited however this has not been confirmed at this time. This issue appears to have been partially, but not completely fixed in WordPress 4.9"
        },
        {
          "name": "CVE-2017-14718",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was susceptible to a Cross-Site Scripting attack in the link modal via a javascript: or data: URL."
        },
        {
          "name": "CVE-2017-14720",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress allowed a Cross-Site scripting attack in the template list view via a crafted template name."
        },
        {
          "name": "CVE-2017-14721",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress allowed Cross-Site scripting in the plugin editor via a crafted plugin name."
        },
        {
          "name": "CVE-2017-14723",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Before version 4.8.2, WordPress mishandled % characters and additional placeholder values in $wpdb->prepare, and thus did not properly address the possibility of plugins and themes enabling SQL injection attacks."
        },
        {
          "name": "CVE-2017-14724",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was vulnerable to cross-site scripting in oEmbed discovery."
        },
        {
          "name": "CVE-2017-14725",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was susceptible to an open redirect attack in wp-admin/edit-tag-form.php and wp-admin/user-edit.php."
        },
        {
          "name": "CVE-2017-14726",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was vulnerable to a cross-site scripting attack via shortcodes in the TinyMCE visual editor."
        },
        {
          "name": "CVE-2017-16510",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 4.8.3 is affected by an issue where $wpdb->prepare() can create unexpected and unsafe queries leading to potential SQL injection (SQLi) in plugins and themes, as demonstrated by a \"double prepare\" approach, a different vulnerability than CVE-2017-14723."
        },
        {
          "name": "CVE-2017-17091",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-admin/user-new.php in WordPress before 4.9.1 sets the newbloguser key to a string that can be directly derived from the user ID, which allows remote attackers to bypass intended access restrictions by entering this string."
        },
        {
          "name": "CVE-2017-17092",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/functions.php in WordPress before 4.9.1 does not require the unfiltered_html capability for upload of .js files, which might allow remote attackers to conduct XSS attacks via a crafted file."
        },
        {
          "name": "CVE-2017-17093",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/general-template.php in WordPress before 4.9.1 does not properly restrict the lang attribute of an HTML element, which might allow attackers to conduct XSS attacks via the language setting of a site."
        },
        {
          "name": "CVE-2017-17094",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/feed.php in WordPress before 4.9.1 does not properly restrict enclosures in RSS and Atom fields, which might allow attackers to conduct XSS attacks via a crafted URL."
        },
        {
          "name": "CVE-2017-5487",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php in the REST API implementation in WordPress 4.7 before 4.7.1 does not properly restrict listings of post authors, which allows remote attackers to obtain sensitive information via a wp-json/wp/v2/users request."
        },
        {
          "name": "CVE-2017-5488",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in wp-admin/update-core.php in WordPress before 4.7.1 allow remote attackers to inject arbitrary web script or HTML via the (1) name or (2) version header of a plugin."
        },
        {
          "name": "CVE-2017-5489",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site request forgery (CSRF) vulnerability in WordPress before 4.7.1 allows remote attackers to hijack the authentication of unspecified victims via vectors involving a Flash file upload."
        },
        {
          "name": "CVE-2017-5490",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the theme-name fallback functionality in wp-includes/class-wp-theme.php in WordPress before 4.7.1 allows remote attackers to inject arbitrary web script or HTML via a crafted directory name of a theme, related to wp-admin/includes/class-theme-installer-skin.php."
        },
        {
          "name": "CVE-2017-5491",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-mail.php in WordPress before 4.7.1 might allow remote attackers to bypass intended posting restrictions via a spoofed mail server with the mail.example.com name."
        },
        {
          "name": "CVE-2017-5492",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site request forgery (CSRF) vulnerability in the widget-editing accessibility-mode feature in WordPress before 4.7.1 allows remote attackers to hijack the authentication of unspecified victims for requests that perform a widgets-access action, related to wp-admin/includes/class-wp-screen.php and wp-admin/widgets.php."
        },
        {
          "name": "CVE-2017-5493",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-includes/ms-functions.php in the Multisite WordPress API in WordPress before 4.7.1 does not properly choose random numbers for keys, which makes it easier for remote attackers to bypass intended access restrictions via a crafted (1) site signup or (2) user signup."
        },
        {
          "name": "CVE-2017-5610",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/includes/class-wp-press-this.php in Press This in WordPress before 4.7.2 does not properly restrict visibility of a taxonomy-assignment user interface, which allows remote attackers to bypass intended access restrictions by reading terms."
        },
        {
          "name": "CVE-2017-5611",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "SQL injection vulnerability in wp-includes/class-wp-query.php in WP_Query in WordPress before 4.7.2 allows remote attackers to execute arbitrary SQL commands by leveraging the presence of an affected plugin or theme that mishandles a crafted post type name."
        },
        {
          "name": "CVE-2017-5612",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/includes/class-wp-posts-list-table.php in the posts list table in WordPress before 4.7.2 allows remote attackers to inject arbitrary web script or HTML via a crafted excerpt."
        },
        {
          "name": "CVE-2017-6814",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3, there is authenticated Cross-Site Scripting (XSS) via Media File Metadata. This is demonstrated by both (1) mishandling of the playlist shortcode in the wp_playlist_shortcode function in wp-includes/media.php and (2) mishandling of meta information in the renderTracks function in wp-includes/js/mediaelement/wp-playlist.js."
        },
        {
          "name": "CVE-2017-6815",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-includes/pluggable.php), control characters can trick redirect URL validation."
        },
        {
          "name": "CVE-2017-6816",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-admin/plugins.php), unintended files can be deleted by administrators using the plugin deletion functionality."
        },
        {
          "name": "CVE-2017-6817",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-includes/embed.php), there is authenticated Cross-Site Scripting (XSS) in YouTube URL Embeds."
        },
        {
          "name": "CVE-2017-6818",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-admin/js/tags-box.js), there is cross-site scripting (XSS) via taxonomy term names."
        },
        {
          "name": "CVE-2017-6819",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3, there is cross-site request forgery (CSRF) in Press This (wp-admin/includes/class-wp-press-this.php), leading to excessive use of server resources. The CSRF can trigger an outbound HTTP request for a large file that is then parsed by Press This."
        },
        {
          "name": "CVE-2017-8295",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress through 4.7.4 relies on the Host HTTP header for a password-reset e-mail message, which makes it easier for remote attackers to reset arbitrary passwords by making a crafted wp-login.php?action=lostpassword request and then arranging for this message to bounce or be resent, leading to transmission of the reset key to a mailbox on an attacker-controlled SMTP server. This is related to problematic use of the SERVER_NAME variable in wp-includes/pluggable.php in conjunction with the PHP mail function. Exploitation is not achievable in all cases because it requires at least one of the following: (1) the attacker can prevent the victim from receiving any e-mail messages for an extended period of time (such as 5 days), (2) the victim's e-mail system sends an autoresponse containing the original message, or (3) the victim manually composes a reply containing the original message."
        },
        {
          "name": "CVE-2017-9061",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.5, a cross-site scripting (XSS) vulnerability exists when attempting to upload very large files, because the error message does not properly restrict presentation of the filename."
        },
        {
          "name": "CVE-2017-9062",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, there is improper handling of post meta data values in the XML-RPC API."
        },
        {
          "name": "CVE-2017-9063",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.5, a cross-site scripting (XSS) vulnerability related to the Customizer exists, involving an invalid customization session."
        },
        {
          "name": "CVE-2017-9064",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, a Cross Site Request Forgery (CSRF) vulnerability exists in the filesystem credentials dialog because a nonce is not required for updating credentials."
        },
        {
          "name": "CVE-2017-9065",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, there is a lack of capability checks for post meta data in the XML-RPC API."
        },
        {
          "name": "CVE-2017-9066",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, there is insufficient redirect validation in the HTTP class, leading to SSRF."
        },
        {
          "name": "CVE-2018-1000773",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress version 4.9.8 and earlier contains a CWE-20 Input Validation vulnerability in thumbnail processing that can result in remote code execution due to an incomplete fix for CVE-2017-1000600. This attack appears to be exploitable via thumbnail upload by an authenticated user and may require additional plugins in order to be exploited however this has not been confirmed at this time."
        },
        {
          "name": "CVE-2018-10100",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before WordPress 4.9.5, the redirection URL for the login page was not validated or sanitized if forced to use HTTPS."
        },
        {
          "name": "CVE-2018-10101",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before WordPress 4.9.5, the URL validator assumed URLs with the hostname localhost were on the same host as the WordPress server."
        },
        {
          "name": "CVE-2018-10102",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before WordPress 4.9.5, the version string was not escaped in the get_the_generator function, and could lead to XSS in a generator tag."
        },
        {
          "name": "CVE-2018-12895",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress through 4.9.6 allows Author users to execute arbitrary code by leveraging directory traversal in the wp-admin/post.php thumb parameter, which is passed to the PHP unlink function and can delete the wp-config.php file. This is related to missing filename validation in the wp-includes/post.php wp_delete_attachment function. The attacker must have capabilities for files and posts that are normally available only to the Author, Editor, and Administrator roles. The attack methodology is to delete wp-config.php and then launch a new installation process to increase the attacker's privileges."
        },
        {
          "name": "CVE-2018-20147",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, authors could modify metadata to bypass intended restrictions on deleting files."
        },
        {
          "name": "CVE-2018-20148",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, contributors could conduct PHP object injection attacks via crafted metadata in a wp.getMediaItem XMLRPC call. This is caused by mishandling of serialized data at phar:// URLs in the wp_get_attachment_thumb_file function in wp-includes/post.php."
        },
        {
          "name": "CVE-2018-20149",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, when the Apache HTTP Server is used, authors could upload crafted files that bypass intended MIME type restrictions, leading to XSS, as demonstrated by a .jpg file without JPEG data."
        },
        {
          "name": "CVE-2018-20150",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, crafted URLs could trigger XSS for certain use cases involving plugins."
        },
        {
          "name": "CVE-2018-20151",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, the user-activation page could be read by a search engine's web crawler if an unusual configuration were chosen. The search engine could then index and display a user's e-mail address and (rarely) the password that was generated by default."
        },
        {
          "name": "CVE-2018-20152",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, authors could bypass intended restrictions on post types via crafted input."
        },
        {
          "name": "CVE-2018-20153",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, contributors could modify new comments made by users with greater privileges, possibly causing XSS."
        },
        {
          "name": "CVE-2018-5776",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 4.9.2 has XSS in the Flash fallback files in MediaElement (under wp-includes/js/mediaelement)."
        },
        {
          "name": "CVE-2018-6389",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress through 4.9.2, unauthenticated attackers can cause a denial of service (resource consumption) by using the large list of registered .js files (from wp-includes/script-loader.php) to construct a series of requests to load every file many times."
        },
        {
          "name": "CVE-2019-16217",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in media uploads because wp_ajax_upload_attachment is mishandled."
        },
        {
          "name": "CVE-2019-16218",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in stored comments."
        },
        {
          "name": "CVE-2019-16219",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in shortcode previews."
        },
        {
          "name": "CVE-2019-16220",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 5.2.3, validation and sanitization of a URL in wp_validate_redirect in wp-includes/pluggable.php could lead to an open redirect."
        },
        {
          "name": "CVE-2019-16221",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows reflected XSS in the dashboard."
        },
        {
          "name": "CVE-2019-16222",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 has an issue with URL sanitization in wp_kses_bad_protocol_once in wp-includes/kses.php that can lead to cross-site scripting (XSS) attacks."
        },
        {
          "name": "CVE-2019-16223",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in post previews by authenticated users."
        },
        {
          "name": "CVE-2019-16781",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 5.3.1, authenticated users with lower privileges (like contributors) can inject JavaScript code in the block editor, which is executed within the dashboard. It can lead to an admin opening the affected post in the editor leading to XSS."
        },
        {
          "name": "CVE-2019-17669",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.2.4 has a Server Side Request Forgery (SSRF) vulnerability because URL validation does not consider the interpretation of a name as a series of hex characters."
        },
        {
          "name": "CVE-2019-17670",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.2.4 has a Server Side Request Forgery (SSRF) vulnerability because Windows paths are mishandled during certain validation of relative URLs."
        },
        {
          "name": "CVE-2019-17671",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 5.2.4, unauthenticated viewing of certain content is possible because the static query property is mishandled."
        },
        {
          "name": "CVE-2019-17672",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.4 is vulnerable to a stored XSS attack to inject JavaScript into STYLE elements."
        },
        {
          "name": "CVE-2019-17673",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.2.4 is vulnerable to poisoning of the cache of JSON GET requests because certain requests lack a Vary: Origin header."
        },
        {
          "name": "CVE-2019-17674",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.4 is vulnerable to stored XSS (cross-site scripting) via the Customizer."
        },
        {
          "name": "CVE-2019-17675",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.2.4 does not properly consider type confusion during validation of the referer in the admin pages, possibly leading to CSRF."
        },
        {
          "name": "CVE-2019-20041",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "wp_kses_bad_protocol in wp-includes/kses.php in WordPress before 5.3.1 mishandles the HTML5 colon named entity, allowing attackers to bypass input sanitization, as demonstrated by the javascript&colon; substring."
        },
        {
          "name": "CVE-2019-20042",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In wp-includes/formatting.php in WordPress 3.7 to 5.3.0, the function wp_targeted_link_rel() can be used in a particular way to result in a stored cross-site scripting (XSS) vulnerability. This has been patched in WordPress 5.3.1, along with all the previous WordPress versions from 3.7 to 5.3 via a minor release."
        },
        {
          "name": "CVE-2019-20043",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in WordPress 3.7 to 5.3.0, authenticated users who do not have the rights to publish a post are able to mark posts as sticky or unsticky via the REST API. For example, the contributor role does not have such rights, but this allowed them to bypass that. This has been patched in WordPress 5.3.1, along with all the previous WordPress versions from 3.7 to 5.3 via a minor release."
        },
        {
          "name": "CVE-2019-8942",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.9.9 and 5.x before 5.0.1 allows remote code execution because an _wp_attached_file Post Meta entry can be changed to an arbitrary string, such as one ending with a .jpg?file.php substring. An attacker with author privileges can execute arbitrary code by uploading a crafted image containing PHP code in the Exif metadata. Exploitation can leverage CVE-2019-8943."
        },
        {
          "name": "CVE-2019-8943",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress through 5.0.3 allows Path Traversal in wp_crop_image(). An attacker (who has privileges to crop an image) can write the output image to an arbitrary directory via a filename containing two image extensions and ../ sequences, such as a filename ending with the .jpg?/../../file.jpg substring."
        },
        {
          "name": "CVE-2019-9787",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.1.1 does not properly filter comment content, leading to Remote Code Execution by unauthenticated users in a default configuration. This occurs because CSRF protection is mishandled, and because Search Engine Optimization of A elements is performed incorrectly, leading to XSS. The XSS results in administrative access, which allows arbitrary changes to .php files. This is related to wp-admin/includes/ajax-actions.php and wp-includes/comment.php."
        },
        {
          "name": "CVE-2020-11026",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In affected versions of WordPress, files with a specially crafted name when uploaded to the Media section can lead to script execution upon accessing the file. This requires an authenticated user with privileges to upload files. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11027",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In affected versions of WordPress, a password reset link emailed to a user does not expire upon changing the user password. Access would be needed to the email account of the user by a malicious party for successful execution. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11028",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In affected versions of WordPress, some private posts, which were previously public, can result in unauthenticated disclosure under a specific set of conditions. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11029",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In affected versions of WordPress, a vulnerability in the stats() method of class-wp-object-cache.php can be exploited to execute cross-site scripting (XSS) attacks. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11030",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In affected versions of WordPress, a special payload can be crafted that can lead to scripts getting executed within the search block of the block editor. This requires an authenticated user with the ability to add content. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-25286",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In wp-includes/comment-template.php in WordPress before 5.4.2, comments from a post or page could sometimes be seen in the latest comments even if the post or page was not public."
        },
        {
          "name": "CVE-2020-28032",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.5.2 mishandles deserialization requests in wp-includes/Requests/Utility/FilteredIterator.php."
        },
        {
          "name": "CVE-2020-28033",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.5.2 mishandles embeds from disabled sites on a multisite network, as demonstrated by allowing a spam embed."
        },
        {
          "name": "CVE-2020-28034",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.5.2 allows XSS associated with global variables."
        },
        {
          "name": "CVE-2020-28035",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.5.2 allows attackers to gain privileges via XML-RPC."
        },
        {
          "name": "CVE-2020-28036",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "wp-includes/class-wp-xmlrpc-server.php in WordPress before 5.5.2 allows attackers to gain privileges by using XML-RPC to comment on a post."
        },
        {
          "name": "CVE-2020-28037",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "is_blog_installed in wp-includes/functions.php in WordPress before 5.5.2 improperly determines whether WordPress is already installed, which might allow an attacker to perform a new installation, leading to remote code execution (as well as a denial of service for the old installation)."
        },
        {
          "name": "CVE-2020-28038",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.5.2 allows stored XSS via post slugs."
        },
        {
          "name": "CVE-2020-28039",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "is_protected_meta in wp-includes/meta.php in WordPress before 5.5.2 allows arbitrary file deletion because it does not properly determine whether a meta key is considered protected."
        },
        {
          "name": "CVE-2020-28040",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.5.2 allows CSRF attacks that change a theme's background image."
        },
        {
          "name": "CVE-2021-44223",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.8 lacks support for the Update URI plugin header. This makes it easier for remote attackers to execute arbitrary code via a supply-chain attack against WordPress installations that use any plugin for which the slug satisfies the naming constraints of the WordPress.org Plugin Directory but is not yet present in that directory."
        }
      ]
    },
    {
      "package": "configure-wa-wordpress-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "create-db-mysql-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "create-db-mysql-0.0.1-SNAPSHOT.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "create-dbms-mysql-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "create-dbms-mysql-0.0.1-SNAPSHOT.jar",
      "alerts": 11,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2007-1420",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL 5.x before 5.0.36 allows local users to cause a denial of service (database crash) by performing information_schema table subselects and using ORDER BY to sort a single-row result, which prevents certain structure elements from being initialized and triggers a NULL dereference in the filesort function."
        },
        {
          "name": "CVE-2007-2691",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "MySQL before 4.1.23, 5.0.x before 5.0.42, and 5.1.x before 5.1.18 does not require the DROP privilege for RENAME TABLE statements, which allows remote authenticated users to rename arbitrary tables."
        },
        {
          "name": "CVE-2007-5925",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The convert_search_mode_to_innobase function in ha_innodb.cc in the InnoDB engine in MySQL 5.1.23-BK and earlier allows remote authenticated users to cause a denial of service (database crash) via a certain CONTAINS operation on an indexed column, which triggers an assertion error."
        },
        {
          "name": "CVE-2009-0819",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via \"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML(),\" which triggers an assertion failure."
        },
        {
          "name": "CVE-2009-4028",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The vio_verify_callback function in viosslfactories.c in MySQL 5.0.x before 5.0.88 and 5.1.x before 5.1.41, when OpenSSL is used, accepts a value of zero for the depth of X.509 certificates, which allows man-in-the-middle attackers to spoof arbitrary SSL-based MySQL servers via a crafted certificate, as demonstrated by a certificate presented by a server linked against the yaSSL library."
        },
        {
          "name": "CVE-2010-1621",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command."
        },
        {
          "name": "CVE-2010-1626",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "MySQL before 5.1.46 allows local users to delete the data and index files of another user's MyISAM table via a symlink attack in conjunction with the DROP TABLE command, a different vulnerability than CVE-2008-4098 and CVE-2008-7247."
        },
        {
          "name": "CVE-2010-3677",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) via a join query that uses a table with a unique SET column."
        },
        {
          "name": "CVE-2010-3682",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL 5.1 before 5.1.49 and 5.0 before 5.0.92 allows remote authenticated users to cause a denial of service (mysqld daemon crash) by using EXPLAIN with crafted \"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)\" statements, which triggers a NULL pointer dereference in the Item_singlerow_subselect::store function."
        },
        {
          "name": "CVE-2012-5627",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Oracle MySQL and MariaDB 5.5.x before 5.5.29, 5.3.x before 5.3.12, and 5.2.x before 5.2.14 does not modify the salt during multiple executions of the change_user command within the same connection which makes it easier for remote authenticated users to conduct brute force password guessing attacks."
        },
        {
          "name": "CVE-2015-2575",
          "software": "cpe:2.3:a:mysql:mysql:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J."
        }
      ]
    },
    {
      "package": "create-wa-wordpress-0.0.1-SNAPSHOT-sources.jar",
      "alerts": 239,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2003-1598",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in log.header.php in WordPress 0.7 and earlier allows remote attackers to execute arbitrary SQL commands via the posts variable."
        },
        {
          "name": "CVE-2005-1102",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in template-functions-post.php in WordPress 1.5 and earlier allow remote attackers to execute arbitrary commands via the (1) content or (2) title of the post."
        },
        {
          "name": "CVE-2005-1688",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Wordpress 1.5 and earlier allows remote attackers to obtain sensitive information via a direct request to files in (1) wp-content/themes/, (2) wp-includes/, or (3) wp-admin/, which reveal the path in an error message."
        },
        {
          "name": "CVE-2006-1796",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the paging links functionality in template-functions-links.php in Wordpress 1.5.2, and possibly other versions before 2.0.1, allows remote attackers to inject arbitrary web script or HTML to Internet Explorer users via the request URI ($_SERVER['REQUEST_URI'])."
        },
        {
          "name": "CVE-2006-2667",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Direct static code injection vulnerability in WordPress 2.0.2 and earlier allows remote attackers to execute arbitrary commands by inserting a carriage return and PHP code when updating a profile, which is appended after a special comment sequence into files in (1) wp-content/cache/userlogins/ (2) wp-content/cache/users/ which are later included by cache.php, as demonstrated using the displayname argument."
        },
        {
          "name": "CVE-2006-5705",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple directory traversal vulnerabilities in plugins/wp-db-backup.php in WordPress before 2.0.5 allow remote authenticated users to read or overwrite arbitrary files via directory traversal sequences in the (1) backup and (2) fragment parameters in a GET request."
        },
        {
          "name": "CVE-2006-6016",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/user-edit.php in WordPress before 2.0.5 allows remote authenticated users to read the metadata of an arbitrary user via a modified user_id parameter."
        },
        {
          "name": "CVE-2006-6017",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.0.5 does not properly store a profile containing a string representation of a serialized object, which allows remote authenticated users to cause a denial of service (application crash) via a string that represents a (1) malformed or (2) large serialized object, because the object triggers automatic unserialization for display."
        },
        {
          "name": "CVE-2006-6808",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/templates.php in WordPress 2.0.5 allows remote attackers to inject arbitrary web script or HTML via the file parameter.  NOTE: some sources have reported this as a vulnerability in the get_file_description function in wp-admin/admin-functions.php."
        },
        {
          "name": "CVE-2007-0107",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.0.6, when mbstring is enabled for PHP, decodes alternate character sets after escaping the SQL query, which allows remote attackers to bypass SQL injection protection schemes and execute arbitrary SQL commands via multibyte charsets, as demonstrated using UTF-7."
        },
        {
          "name": "CVE-2007-0539",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The wp_remote_fopen function in WordPress before 2.1 allows remote attackers to cause a denial of service (bandwidth or thread consumption) via pingback service calls with a source URI that corresponds to a large file, which triggers a long download session without a timeout constraint."
        },
        {
          "name": "CVE-2007-0540",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress allows remote attackers to cause a denial of service (bandwidth or thread consumption) via pingback service calls with a source URI that corresponds to a file with a binary content type, which is downloaded even though it cannot contain usable pingback data."
        },
        {
          "name": "CVE-2007-0541",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress allows remote attackers to determine the existence of arbitrary files, and possibly read portions of certain files, via pingback service calls with a source URI that corresponds to a local pathname, which triggers different fault codes for existing and non-existing files, and in certain configurations causes a brief file excerpt to be published as a blog comment."
        },
        {
          "name": "CVE-2007-1244",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the AdminPanel in WordPress 2.1.1 and earlier allows remote attackers to perform privileged actions as administrators, as demonstrated using the delete action in wp-admin/post.php.  NOTE: this issue can be leveraged to perform cross-site scripting (XSS) attacks and steal cookies via the post parameter."
        },
        {
          "name": "CVE-2007-1893",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "xmlrpc (xmlrpc.php) in WordPress 2.1.2, and probably earlier, allows remote authenticated users with the contributor role to bypass intended access restrictions and invoke the publish_posts functionality, which can be used to \"publish a previously saved post.\""
        },
        {
          "name": "CVE-2007-1897",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "SQL injection vulnerability in xmlrpc (xmlrpc.php) in WordPress 2.1.2, and probably earlier, allows remote authenticated users to execute arbitrary SQL commands via a string parameter value in an XML RPC mt.setPostCategories method call, related to the post_id variable."
        },
        {
          "name": "CVE-2007-2627",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in sidebar.php in WordPress, when custom 404 pages that call get_sidebar are used, allows remote attackers to inject arbitrary web script or HTML via the query string (PHP_SELF), a different vulnerability than CVE-2007-1622."
        },
        {
          "name": "CVE-2007-2821",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in wp-admin/admin-ajax.php in WordPress before 2.2 allows remote attackers to execute arbitrary SQL commands via the cookie parameter."
        },
        {
          "name": "CVE-2007-3543",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unrestricted file upload vulnerability in WordPress before 2.2.1 and WordPress MU before 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code by making a post that specifies a .php filename in the _wp_attached_file metadata field; and then sending this file's content, along with its post_ID value, to (1) wp-app.php or (2) app.php."
        },
        {
          "name": "CVE-2007-3544",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unrestricted file upload vulnerability in (1) wp-app.php and (2) app.php in WordPress 2.2.1 and WordPress MU 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code via unspecified vectors, possibly related to the wp_postmeta table and the use of custom fields in normal (non-attachment) posts.  NOTE: this issue reportedly exists because of an incomplete fix for CVE-2007-3543."
        },
        {
          "name": "CVE-2007-3639",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.2.2 allows remote attackers to redirect visitors to other websites and potentially obtain sensitive information via (1) the _wp_http_referer parameter to wp-pass.php, related to the wp_get_referer function in wp-includes/functions.php; and possibly other vectors related to (2) wp-includes/pluggable.php and (3) the wp_nonce_ays function in wp-includes/functions.php."
        },
        {
          "name": "CVE-2007-4165",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in index.php in the Blue Memories theme 1.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the s parameter, possibly a related issue to CVE-2007-2757 and CVE-2007-4014.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
        },
        {
          "name": "CVE-2007-6677",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in Peter's Random Anti-Spam Image 0.2.4 and earlier plugin for WordPress allows remote attackers to inject arbitrary web script or HTML via the comment field in the comment form."
        },
        {
          "name": "CVE-2008-0192",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress 2.0.9 and earlier allow remote attackers to inject arbitrary web script or HTML via the popuptitle parameter to (1) wp-admin/post.php or (2) wp-admin/page-new.php."
        },
        {
          "name": "CVE-2008-0193",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-db-backup.php in WordPress 2.0.11 and earlier, and possibly 2.1.x through 2.3.x, allows remote attackers to inject arbitrary web script or HTML via the backup parameter in a wp-db-backup.php action to wp-admin/edit.php."
        },
        {
          "name": "CVE-2008-0194",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in wp-db-backup.php in WordPress 2.0.3 and earlier allows remote attackers to read arbitrary files, delete arbitrary files, and cause a denial of service via a .. (dot dot) in the backup parameter in a wp-db-backup.php action to wp-admin/edit.php.  NOTE: this might be the same as CVE-2006-5705.1."
        },
        {
          "name": "CVE-2008-0195",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress 2.0.11 and earlier allows remote attackers to obtain sensitive information via an empty value of the page parameter to certain PHP scripts under wp-admin/, which reveals the path in various error messages."
        },
        {
          "name": "CVE-2008-0196",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple directory traversal vulnerabilities in WordPress 2.0.11 and earlier allow remote attackers to read arbitrary files via a .. (dot dot) in (1) the page parameter to certain PHP scripts under wp-admin/ or (2) the import parameter to wp-admin/admin.php, as demonstrated by discovering the full path via a request for the \\..\\..\\wp-config pathname; and allow remote attackers to modify arbitrary files via a .. (dot dot) in the file parameter to wp-admin/templates.php."
        },
        {
          "name": "CVE-2008-0198",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site request forgery (CSRF) vulnerabilities in wp-contact-form/options-contactform.php in the WP-ContactForm 1.5 alpha and earlier plugin for WordPress allow remote attackers to perform actions as administrators via the (1) wpcf_question, (2) wpcf_success_msg, or (3) wpcf_error_msg parameter to wp-admin/admin.php."
        },
        {
          "name": "CVE-2008-0491",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in fim_rss.php in the fGallery 2.4.1 plugin for WordPress allows remote attackers to execute arbitrary SQL commands via the album parameter."
        },
        {
          "name": "CVE-2008-0615",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Directory traversal vulnerability in wp-admin/admin.php in the DMSGuestbook 1.8.0 and 1.7.0 plugin for WordPress allows remote authenticated users to read arbitrary files via a .. (dot dot) in the (1) folder and (2) file parameters."
        },
        {
          "name": "CVE-2008-0616",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "SQL injection vulnerability in the administration panel in the DMSGuestbook 1.7.0 plugin for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via unspecified vectors.  NOTE: it is not clear whether this issue crosses privilege boundaries."
        },
        {
          "name": "CVE-2008-0617",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in the DMSGuestbook 1.7.0 plugin for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) file parameter to wp-admin/admin.php, or the (2) messagefield parameter in the guestbook page, and the (3) title parameter in the messagearea."
        },
        {
          "name": "CVE-2008-0618",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in the DMSGuestbook 1.8.0 and 1.7.0 plugin for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) gbname, (2) gbemail, (3) gburl, and (4) gbmsg parameters to unspecified programs.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
        },
        {
          "name": "CVE-2008-2146",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-includes/vars.php in Wordpress before 2.2.3 does not properly extract the current path from the PATH_INFO ($PHP_SELF), which allows remote attackers to bypass intended access restrictions for certain pages."
        },
        {
          "name": "CVE-2008-2392",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Unrestricted file upload vulnerability in WordPress 2.5.1 and earlier might allow remote authenticated administrators to upload and execute arbitrary PHP files via the Upload section in the Write Tabs area of the dashboard."
        },
        {
          "name": "CVE-2008-3233",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 2.6, SVN development versions only, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2008-4106",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 2.6.2 does not properly handle MySQL warnings about insertion of username strings that exceed the maximum column width of the user_login column, and does not properly handle space characters when comparing usernames, which allows remote attackers to change an arbitrary user's password to a random value by registering a similar username and then requesting a password reset, related to a \"SQL column truncation vulnerability.\" NOTE: the attacker can discover the random password by also exploiting CVE-2008-4107."
        },
        {
          "name": "CVE-2008-4769",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in the get_category_template function in wp-includes/theme.php in WordPress 2.3.3 and earlier, and 2.5, allows remote attackers to include and possibly execute arbitrary PHP files via the cat parameter in index.php.  NOTE: some of these details are obtained from third party information."
        },
        {
          "name": "CVE-2008-4796",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The _httpsrequest function (Snoopy/Snoopy.class.php) in Snoopy 1.2.3 and earlier, as used in (1) ampache, (2) libphp-snoopy, (3) mahara, (4) mediamate, (5) opendb, (6) pixelpost, and possibly other products, allows remote attackers to execute arbitrary commands via shell metacharacters in https URLs."
        },
        {
          "name": "CVE-2008-5278",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the self_link function in in the RSS Feed Generator (wp-includes/feed.php) for WordPress before 2.6.5 allows remote attackers to inject arbitrary web script or HTML via the Host header (HTTP_HOST variable)."
        },
        {
          "name": "CVE-2008-5695",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-admin/options.php in WordPress MU before 1.3.2, and WordPress 2.3.2 and earlier, does not properly validate requests to update an option, which allows remote authenticated users with manage_options and upload_files capabilities to execute arbitrary code by uploading a PHP script and adding this script's pathname to active_plugins."
        },
        {
          "name": "CVE-2009-2334",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/admin.php in WordPress and WordPress MU before 2.8.1 does not require administrative authentication to access the configuration of a plugin, which allows remote attackers to specify a configuration file in the page parameter to obtain sensitive information or modify this file, as demonstrated by the (1) collapsing-archives/options.txt, (2) akismet/readme.txt, (3) related-ways-to-take-action/options.php, (4) wp-security-scan/securityscan.php, and (5) wp-ids/ids-admin.php files. NOTE: this can be leveraged for cross-site scripting (XSS) and denial of service."
        },
        {
          "name": "CVE-2009-2335",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress and WordPress MU before 2.8.1 exhibit different behavior for a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \"user convenience.\""
        },
        {
          "name": "CVE-2009-2336",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The forgotten mail interface in WordPress and WordPress MU before 2.8.1 exhibits different behavior for a password request depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \"user convenience.\""
        },
        {
          "name": "CVE-2009-2432",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress and WordPress MU before 2.8.1 allow remote attackers to obtain sensitive information via a direct request to wp-settings.php, which reveals the installation path in an error message."
        },
        {
          "name": "CVE-2009-2762",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-login.php in WordPress 2.8.3 and earlier allows remote attackers to force a password reset for the first user in the database, possibly the administrator, via a key[] array variable in a resetpass (aka rp) action, which bypasses a check that assumes that $key is not an array."
        },
        {
          "name": "CVE-2009-2851",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the administrator interface in WordPress before 2.8.2 allows remote attackers to inject arbitrary web script or HTML via a comment author URL."
        },
        {
          "name": "CVE-2009-2854",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Wordpress before 2.8.3 does not check capabilities for certain actions, which allows remote attackers to make unauthorized edits or additions via a direct request to (1) edit-comments.php, (2) edit-pages.php, (3) edit.php, (4) edit-category-form.php, (5) edit-link-category-form.php, (6) edit-tag-form.php, (7) export.php, (8) import.php, or (9) link-add.php in wp-admin/."
        },
        {
          "name": "CVE-2009-3622",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Algorithmic complexity vulnerability in wp-trackback.php in WordPress before 2.8.5 allows remote attackers to cause a denial of service (CPU consumption and server hang) via a long title parameter in conjunction with a charset parameter composed of many comma-separated \"UTF-8\" substrings, related to the mb_convert_encoding function in PHP."
        },
        {
          "name": "CVE-2009-3890",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Unrestricted file upload vulnerability in the wp_check_filetype function in wp-includes/functions.php in WordPress before 2.8.6, when a certain configuration of the mod_mime module in the Apache HTTP Server is enabled, allows remote authenticated users to execute arbitrary code by posting an attachment with a multiple-extension filename, and then accessing this attachment via a direct request to a wp-content/uploads/ pathname, as demonstrated by a .php.jpg filename."
        },
        {
          "name": "CVE-2009-3891",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/press-this.php in WordPress before 2.8.6 allows remote authenticated users to inject arbitrary web script or HTML via the s parameter (aka the selection variable)."
        },
        {
          "name": "CVE-2010-4257",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "SQL injection vulnerability in the do_trackbacks function in wp-includes/comment.php in WordPress before 3.0.2 allows remote authenticated users to execute arbitrary SQL commands via the Send Trackbacks field."
        },
        {
          "name": "CVE-2010-4536",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in KSES, as used in WordPress before 3.0.4, allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) the & (ampersand) character, (2) the case of an attribute name, (3) a padded entity, and (4) an entity that is not in normalized form."
        },
        {
          "name": "CVE-2010-5106",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The XML-RPC remote publishing interface in xmlrpc.php in WordPress before 3.0.3 does not properly check capabilities, which allows remote authenticated users to bypass intended access restrictions, and publish, edit, or delete posts, by leveraging the Author or Contributor role."
        },
        {
          "name": "CVE-2010-5293",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/comment.php in WordPress before 3.0.2 does not properly whitelist trackbacks and pingbacks in the blogroll, which allows remote attackers to bypass intended spam restrictions via a crafted URL, as demonstrated by a URL that triggers a substring match."
        },
        {
          "name": "CVE-2010-5294",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in the request_filesystem_credentials function in wp-admin/includes/file.php in WordPress before 3.0.2 allow remote servers to inject arbitrary web script or HTML by providing a crafted error message for a (1) FTP or (2) SSH connection attempt."
        },
        {
          "name": "CVE-2010-5295",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/plugins.php in WordPress before 3.0.2 might allow remote attackers to inject arbitrary web script or HTML via a plugin's author field, which is not properly handled during a Delete Plugin action."
        },
        {
          "name": "CVE-2010-5296",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/capabilities.php in WordPress before 3.0.2, when a Multisite configuration is used, does not require the Super Admin role for the delete_users capability, which allows remote authenticated administrators to bypass intended access restrictions via a delete action."
        },
        {
          "name": "CVE-2010-5297",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "WordPress before 3.0.1, when a Multisite installation is used, permanently retains the \"site administrators can add users\" option once changed, which might allow remote authenticated administrators to bypass intended access restrictions in opportunistic circumstances via an add action after a temporary change."
        },
        {
          "name": "CVE-2011-0700",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.0.5 allow remote authenticated users to inject arbitrary web script or HTML via vectors related to (1) the Quick/Bulk Edit title (aka post title or post_title), (2) post_status, (3) comment_status, (4) ping_status, and (5) escaping of tags within the tags meta box."
        },
        {
          "name": "CVE-2011-0701",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/async-upload.php in the media uploader in WordPress before 3.0.5 allows remote authenticated users to read (1) draft posts or (2) private posts via a modified attachment_id parameter."
        },
        {
          "name": "CVE-2011-4898",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier generates different error messages for requests lacking a dbname parameter depending on whether the MySQL credentials are valid, which makes it easier for remote attackers to conduct brute-force attacks via a series of requests with different uname and pwd parameters.  NOTE: the vendor disputes the significance of this issue; also, it is unclear whether providing intentionally vague error messages during installation would be reasonable from a usability perspective."
        },
        {
          "name": "CVE-2011-4899",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "** DISPUTED ** wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier does not ensure that the specified MySQL database service is appropriate, which allows remote attackers to configure an arbitrary database via the dbhost and dbname parameters, and subsequently conduct static code injection and cross-site scripting (XSS) attacks via (1) an HTTP request or (2) a MySQL query.  NOTE: the vendor disputes the significance of this issue; however, remote code execution makes the issue important in many realistic environments."
        },
        {
          "name": "CVE-2011-4956",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 3.1.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2011-4957",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The make_clickable function in wp-includes/formatting.php in WordPress before 3.1.1 does not properly check URLs before passing them to the PCRE library, which allows remote attackers to cause a denial of service (crash) via a comment with a crafted URL that triggers many recursive calls."
        },
        {
          "name": "CVE-2011-5270",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/press-this.php in WordPress before 3.0.6 does not enforce the publish_posts capability requirement, which allows remote authenticated users to perform publish actions by leveraging the Contributor role."
        },
        {
          "name": "CVE-2012-0782",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** Multiple cross-site scripting (XSS) vulnerabilities in wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) dbhost, (2) dbname, or (3) uname parameter. NOTE: the vendor disputes the significance of this issue; also, it is unclear whether this specific XSS scenario has security relevance."
        },
        {
          "name": "CVE-2012-0937",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** wp-admin/setup-config.php in the installation component in WordPress 3.3.1 and earlier does not limit the number of MySQL queries sent to external MySQL database servers, which allows remote attackers to use WordPress as a proxy for brute-force attacks or denial of service attacks via the dbhost parameter, a different vulnerability than CVE-2011-4898.  NOTE: the vendor disputes the significance of this issue because an incomplete WordPress installation might be present on the network for only a short time."
        },
        {
          "name": "CVE-2012-1936",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "** DISPUTED ** The wp_create_nonce function in wp-includes/pluggable.php in WordPress 3.3.1 and earlier associates a nonce with a user account instead of a user session, which might make it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks on specific actions and objects by sniffing the network, as demonstrated by attacks against the wp-admin/admin-ajax.php and wp-admin/user-new.php scripts.  NOTE: the vendor reportedly disputes the significance of this issue because wp_create_nonce operates as intended, even if it is arguably inconsistent with certain CSRF protection details advocated by external organizations."
        },
        {
          "name": "CVE-2012-2399",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFupload 2.2.0.1 and earlier, as used in WordPress before 3.5.2, TinyMCE Image Manager 1.1 and earlier, and other products allows remote attackers to inject arbitrary web script or HTML via the buttonText parameter, a different vulnerability than CVE-2012-3414."
        },
        {
          "name": "CVE-2012-2400",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Unspecified vulnerability in wp-includes/js/swfobject.js in WordPress before 3.3.2 has unknown impact and attack vectors."
        },
        {
          "name": "CVE-2012-2401",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Plupload before 1.5.4, as used in wp-includes/js/plupload/ in WordPress before 3.3.2 and other products, enables scripting regardless of the domain from which the SWF content was loaded, which allows remote attackers to bypass the Same Origin Policy via crafted content."
        },
        {
          "name": "CVE-2012-2402",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/plugins.php in WordPress before 3.3.2 allows remote authenticated site administrators to bypass intended access restrictions and deactivate network-wide plugins via unspecified vectors."
        },
        {
          "name": "CVE-2012-2403",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/formatting.php in WordPress before 3.3.2 attempts to enable clickable links inside attributes, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors."
        },
        {
          "name": "CVE-2012-2404",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-comments-post.php in WordPress before 3.3.2 supports offsite redirects, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors."
        },
        {
          "name": "CVE-2012-3384",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the customizer in WordPress before 3.4.1 allows remote attackers to hijack the authentication of unspecified victims via unknown vectors."
        },
        {
          "name": "CVE-2012-3385",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.4.1 does not properly restrict access to post contents such as private or draft posts, which allows remote authors or contributors to obtain sensitive information via unknown vectors."
        },
        {
          "name": "CVE-2012-3414",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFUpload 2.2.0.1 and earlier, as used in WordPress before 3.3.2, TinyMCE Image Manager 1.1, and other products, allows remote attackers to inject arbitrary web script or HTML via the movieName parameter, related to the \"ExternalInterface.call\" function."
        },
        {
          "name": "CVE-2012-4421",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The create_post function in wp-includes/class-wp-atom-server.php in WordPress before 3.4.2 does not perform a capability check, which allows remote authenticated users to bypass intended access restrictions and publish new posts by leveraging the Contributor role and using the Atom Publishing Protocol (aka AtomPub) feature."
        },
        {
          "name": "CVE-2012-4422",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "wp-admin/plugins.php in WordPress before 3.4.2, when the multisite feature is enabled, does not check for network-administrator privileges before performing a network-wide activation of an installed plugin, which might allow remote authenticated users to make unintended plugin changes by leveraging the Administrator role."
        },
        {
          "name": "CVE-2012-6633",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/default-filters.php in WordPress before 3.3.3 allows remote attackers to inject arbitrary web script or HTML via an editable slug field."
        },
        {
          "name": "CVE-2012-6634",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/media-upload.php in WordPress before 3.3.3 allows remote attackers to obtain sensitive information or bypass intended media-attachment restrictions via a post_id value."
        },
        {
          "name": "CVE-2012-6635",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/includes/class-wp-posts-list-table.php in WordPress before 3.3.3 does not properly restrict excerpt-view access, which allows remote authenticated users to obtain sensitive information by visiting a draft."
        },
        {
          "name": "CVE-2012-6707",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress through 4.8.2 uses a weak MD5-based password hashing algorithm, which makes it easier for attackers to determine cleartext values by leveraging access to the hash values. NOTE: the approach to changing this may not be fully compatible with certain use cases, such as migration of a WordPress site from a web host that uses a recent PHP version to a different web host that uses PHP 5.2. These use cases are plausible (but very unlikely) based on statistics showing widespread deployment of WordPress with obsolete PHP versions."
        },
        {
          "name": "CVE-2013-0235",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The XMLRPC API in WordPress before 3.5.1 allows remote attackers to send HTTP requests to intranet servers, and conduct port-scanning attacks, by specifying a crafted source URL for a pingback, related to a Server-Side Request Forgery (SSRF) issue."
        },
        {
          "name": "CVE-2013-0236",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.1 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) gallery shortcodes or (2) the content of a post."
        },
        {
          "name": "CVE-2013-0237",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in Plupload.as in Moxiecode plupload before 1.5.5, as used in WordPress before 3.5.1 and other products, allows remote attackers to inject arbitrary web script or HTML via the id parameter."
        },
        {
          "name": "CVE-2013-2199",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The HTTP API in WordPress before 3.5.2 allows remote attackers to send HTTP requests to intranet servers via unspecified vectors, related to a Server-Side Request Forgery (SSRF) issue, a similar vulnerability to CVE-2013-0235."
        },
        {
          "name": "CVE-2013-2200",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.5.2 does not properly check the capabilities of roles, which allows remote authenticated users to bypass intended restrictions on publishing and authorship reassignment via unspecified vectors."
        },
        {
          "name": "CVE-2013-2201",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.2 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) uploads of media files, (2) editing of media files, (3) installation of plugins, (4) updates to plugins, (5) installation of themes, or (6) updates to themes."
        },
        {
          "name": "CVE-2013-2202",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.5.2 allows remote attackers to read arbitrary files via an oEmbed XML provider response containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue."
        },
        {
          "name": "CVE-2013-2203",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.5.2, when the uploads directory forbids write access, allows remote attackers to obtain sensitive information via an invalid upload request, which reveals the absolute path in an XMLHttpRequest error message."
        },
        {
          "name": "CVE-2013-2204",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "moxieplayer.as in Moxiecode moxieplayer, as used in the TinyMCE Media plugin in WordPress before 3.5.2 and other products, does not consider the presence of a # (pound sign) character during extraction of the QUERY_STRING, which allows remote attackers to pass arbitrary parameters to a Flash application, and conduct content-spoofing attacks, via a crafted string after a ? (question mark) character."
        },
        {
          "name": "CVE-2013-2205",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The default configuration of SWFUpload in WordPress before 3.5.2 has an unrestrictive security.allowDomain setting, which allows remote attackers to bypass the Same Origin Policy and conduct cross-site scripting (XSS) attacks via a crafted web site."
        },
        {
          "name": "CVE-2013-4338",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-includes/functions.php in WordPress before 3.6.1 does not properly determine whether data has been serialized, which allows remote attackers to execute arbitrary code by triggering erroneous PHP unserialize operations."
        },
        {
          "name": "CVE-2013-4339",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 3.6.1 does not properly validate URLs before use in an HTTP redirect, which allows remote attackers to bypass intended redirection restrictions via a crafted string."
        },
        {
          "name": "CVE-2013-4340",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "wp-admin/includes/post.php in WordPress before 3.6.1 allows remote authenticated users to spoof the authorship of a post by leveraging the Author role and providing a modified user_ID parameter."
        },
        {
          "name": "CVE-2013-5738",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The get_allowed_mime_types function in wp-includes/functions.php in WordPress before 3.6.1 does not require the unfiltered_html capability for uploads of .htm and .html files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file."
        },
        {
          "name": "CVE-2013-5739",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "The default configuration of WordPress before 3.6.1 does not prevent uploads of .swf and .exe files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file, related to the get_allowed_mime_types function in wp-includes/functions.php."
        },
        {
          "name": "CVE-2013-7233",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the retrospam component in wp-admin/options-discussion.php in WordPress 2.0.11 and earlier allows remote attackers to hijack the authentication of administrators for requests that move comments to the moderation list."
        },
        {
          "name": "CVE-2014-0165",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.7.2 and 3.8.x before 3.8.2 allows remote authenticated users to publish posts by leveraging the Contributor role, related to wp-admin/includes/post.php and wp-admin/includes/class-wp-posts-list-table.php."
        },
        {
          "name": "CVE-2014-0166",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The wp_validate_auth_cookie function in wp-includes/pluggable.php in WordPress before 3.7.2 and 3.8.x before 3.8.2 does not properly determine the validity of authentication cookies, which makes it easier for remote attackers to obtain access via a forged cookie."
        },
        {
          "name": "CVE-2014-5204",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/pluggable.php in WordPress before 3.9.2 rejects invalid CSRF nonces with a different timing depending on which characters in the nonce are incorrect, which makes it easier for remote attackers to bypass a CSRF protection mechanism via a brute-force attack."
        },
        {
          "name": "CVE-2014-5205",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/pluggable.php in WordPress before 3.9.2 does not use delimiters during concatenation of action values and uid values in CSRF tokens, which makes it easier for remote attackers to bypass a CSRF protection mechanism via a brute-force attack."
        },
        {
          "name": "CVE-2014-5240",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/pluggable.php in WordPress before 3.9.2, when Multisite is enabled, allows remote authenticated administrators to inject arbitrary web script or HTML, and obtain Super Admin privileges, via a crafted avatar URL."
        },
        {
          "name": "CVE-2014-5265",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The Incutio XML-RPC (IXR) Library, as used in WordPress before 3.9.2 and Drupal 6.x before 6.33 and 7.x before 7.31, permits entity declarations without considering recursion during entity expansion, which allows remote attackers to cause a denial of service (memory and CPU consumption) via a crafted XML document containing a large number of nested entity references, a similar issue to CVE-2003-1564."
        },
        {
          "name": "CVE-2014-5266",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The Incutio XML-RPC (IXR) Library, as used in WordPress before 3.9.2 and Drupal 6.x before 6.33 and 7.x before 7.31, does not limit the number of elements in an XML document, which allows remote attackers to cause a denial of service (CPU consumption) via a large document, a different vulnerability than CVE-2014-5265."
        },
        {
          "name": "CVE-2014-6412",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.4 makes it easier for remote attackers to predict password-recovery tokens via a brute-force approach."
        },
        {
          "name": "CVE-2014-9031",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the wptexturize function in WordPress before 3.7.5, 3.8.x before 3.8.5, and 3.9.x before 3.9.3 allows remote attackers to inject arbitrary web script or HTML via crafted use of shortcode brackets in a text field, as demonstrated by a comment or a post."
        },
        {
          "name": "CVE-2014-9034",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/class-phpass.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to cause a denial of service (CPU consumption) via a long password that is improperly handled during hashing, a similar issue to CVE-2014-9016."
        },
        {
          "name": "CVE-2014-9035",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in Press This in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2014-9036",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to inject arbitrary web script or HTML via a crafted Cascading Style Sheets (CSS) token sequence in a post."
        },
        {
          "name": "CVE-2014-9037",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 might allow remote attackers to obtain access to an account idle since 2008 by leveraging an improper PHP dynamic type comparison for an MD5 hash."
        },
        {
          "name": "CVE-2014-9038",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/http.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to conduct server-side request forgery (SSRF) attacks by referring to a 127.0.0.0/8 resource."
        },
        {
          "name": "CVE-2014-9039",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-login.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 might allow remote attackers to reset passwords by leveraging access to an e-mail account that received a password-reset message."
        },
        {
          "name": "CVE-2015-2213",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "SQL injection vulnerability in the wp_untrash_post_comments function in wp-includes/post.php in WordPress before 4.2.4 allows remote attackers to execute arbitrary SQL commands via a comment that is mishandled after retrieval from the trash."
        },
        {
          "name": "CVE-2015-3438",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 4.1.2, when MySQL is used without strict mode, allow remote attackers to inject arbitrary web script or HTML via a (1) four-byte UTF-8 character or (2) invalid character that reaches the database layer, as demonstrated by a crafted character in a comment."
        },
        {
          "name": "CVE-2015-3440",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.1 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type."
        },
        {
          "name": "CVE-2015-5622",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 4.2.3 allows remote authenticated users to inject arbitrary web script or HTML by leveraging the Author or Contributor role to place a crafted shortcode inside an HTML element, related to wp-includes/kses.php and wp-includes/shortcodes.php."
        },
        {
          "name": "CVE-2015-5623",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 4.2.3 does not properly verify the edit_posts capability, which allows remote authenticated users to bypass intended access restrictions and create drafts by leveraging the Subscriber role, as demonstrated by a post-quickdraft-save action to wp-admin/post.php."
        },
        {
          "name": "CVE-2015-5714",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in WordPress before 4.3.1 allows remote attackers to inject arbitrary web script or HTML by leveraging the mishandling of unclosed HTML elements during processing of shortcode tags."
        },
        {
          "name": "CVE-2015-5715",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The mw_editPost function in wp-includes/class-wp-xmlrpc-server.php in the XMLRPC subsystem in WordPress before 4.3.1 allows remote authenticated users to bypass intended access restrictions, and arrange for a private post to be published and sticky, via unspecified vectors."
        },
        {
          "name": "CVE-2015-5730",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The sanitize_widget_instance function in wp-includes/class-wp-customize-widgets.php in WordPress before 4.2.4 does not use a constant-time comparison for widgets, which allows remote attackers to conduct a timing side-channel attack by measuring the delay before inequality is calculated."
        },
        {
          "name": "CVE-2015-5731",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in wp-admin/post.php in WordPress before 4.2.4 allows remote attackers to hijack the authentication of administrators for requests that lock a post, and consequently cause a denial of service (editing blockage), via a get-post-lock action."
        },
        {
          "name": "CVE-2015-5732",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the form function in the WP_Nav_Menu_Widget class in wp-includes/default-widgets.php in WordPress before 4.2.4 allows remote attackers to inject arbitrary web script or HTML via a widget title."
        },
        {
          "name": "CVE-2015-5733",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the refreshAdvancedAccessibilityOfItem function in wp-admin/js/nav-menu.js in WordPress before 4.2.4 allows remote attackers to inject arbitrary web script or HTML via an accessibility-helper title."
        },
        {
          "name": "CVE-2015-5734",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the legacy theme preview implementation in wp-includes/theme.php in WordPress before 4.2.4 allows remote attackers to inject arbitrary web script or HTML via a crafted string."
        },
        {
          "name": "CVE-2015-7989",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the user list table in WordPress before 4.3.1 allows remote authenticated users to inject arbitrary web script or HTML via a crafted e-mail address, a different vulnerability than CVE-2015-5714."
        },
        {
          "name": "CVE-2015-8834",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.2 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-3440."
        },
        {
          "name": "CVE-2016-10033",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "The mailSend function in the isMail transport in PHPMailer before 5.2.18 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code via a \\\" (backslash double quote) in a crafted Sender property."
        },
        {
          "name": "CVE-2016-10045",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "The isMail transport in PHPMailer before 5.2.20 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code by leveraging improper interaction between the escapeshellarg function and internal escaping performed in the mail function in PHP. NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-10033."
        },
        {
          "name": "CVE-2016-10148",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "The wp_ajax_update_plugin function in wp-admin/includes/ajax-actions.php in WordPress before 4.6 makes a get_plugin_data call before checking the update_plugins capability, which allows remote authenticated users to bypass intended read-access restrictions via the plugin parameter to wp-admin/admin-ajax.php, a related issue to CVE-2016-6896."
        },
        {
          "name": "CVE-2016-1564",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in wp-includes/class-wp-theme.php in WordPress before 4.4.1 allow remote attackers to inject arbitrary web script or HTML via a (1) stylesheet name or (2) template name to wp-admin/customize.php."
        },
        {
          "name": "CVE-2016-2221",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Open redirect vulnerability in the wp_validate_redirect function in wp-includes/pluggable.php in WordPress before 4.4.2 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a malformed URL that triggers incorrect hostname parsing, as demonstrated by an https:example.com URL."
        },
        {
          "name": "CVE-2016-4029",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5 does not consider octal and hexadecimal IP address formats when determining an intranet address, which allows remote attackers to bypass an intended SSRF protection mechanism via a crafted address."
        },
        {
          "name": "CVE-2016-4566",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in plupload.flash.swf in Plupload before 2.1.9, as used in WordPress before 4.5.2, allows remote attackers to inject arbitrary web script or HTML via a Same-Origin Method Execution (SOME) attack."
        },
        {
          "name": "CVE-2016-4567",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in flash/FlashMediaElement.as in MediaElement.js before 2.21.0, as used in WordPress before 4.5.2, allows remote attackers to inject arbitrary web script or HTML via an obfuscated form of the jsinitfunction parameter, as demonstrated by \"jsinitfunctio%gn.\""
        },
        {
          "name": "CVE-2016-5832",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The customizer in WordPress before 4.5.3 allows remote attackers to bypass intended redirection restrictions via unspecified vectors."
        },
        {
          "name": "CVE-2016-5833",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the column_title function in wp-admin/includes/class-wp-media-list-table.php in WordPress before 4.5.3 allows remote attackers to inject arbitrary web script or HTML via a crafted attachment name, a different vulnerability than CVE-2016-5834."
        },
        {
          "name": "CVE-2016-5834",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the wp_get_attachment_link function in wp-includes/post-template.php in WordPress before 4.5.3 allows remote attackers to inject arbitrary web script or HTML via a crafted attachment name, a different vulnerability than CVE-2016-5833."
        },
        {
          "name": "CVE-2016-5835",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to obtain sensitive revision-history information by leveraging the ability to read a post, related to wp-admin/includes/ajax-actions.php and wp-admin/revision.php."
        },
        {
          "name": "CVE-2016-5836",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The oEmbed protocol implementation in WordPress before 4.5.3 allows remote attackers to cause a denial of service via unspecified vectors."
        },
        {
          "name": "CVE-2016-5837",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to bypass intended access restrictions and remove a category attribute from a post via unspecified vectors."
        },
        {
          "name": "CVE-2016-5838",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to bypass intended password-change restrictions by leveraging knowledge of a cookie."
        },
        {
          "name": "CVE-2016-5839",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.5.3 allows remote attackers to bypass the sanitize_file_name protection mechanism via unspecified vectors."
        },
        {
          "name": "CVE-2016-6634",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the network settings page in WordPress before 4.5 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
        },
        {
          "name": "CVE-2016-6635",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site request forgery (CSRF) vulnerability in the wp_ajax_wp_compression_test function in wp-admin/includes/ajax-actions.php in WordPress before 4.5 allows remote attackers to hijack the authentication of administrators for requests that change the script compression option."
        },
        {
          "name": "CVE-2016-6897",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site request forgery (CSRF) vulnerability in the wp_ajax_update_plugin function in wp-admin/includes/ajax-actions.php in WordPress before 4.6 allows remote attackers to hijack the authentication of subscribers for /dev/random read operations by leveraging a late call to the check_ajax_referer function, a related issue to CVE-2016-6896."
        },
        {
          "name": "CVE-2016-7168",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the media_handle_upload function in wp-admin/includes/media.php in WordPress before 4.6.1 might allow remote attackers to inject arbitrary web script or HTML by tricking an administrator into uploading an image file that has a crafted filename."
        },
        {
          "name": "CVE-2016-7169",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Directory traversal vulnerability in the File_Upload_Upgrader class in wp-admin/includes/class-file-upload-upgrader.php in the upgrade package uploader in WordPress before 4.6.1 allows remote authenticated users to access arbitrary files via a crafted urlholder parameter."
        },
        {
          "name": "CVE-2016-9263",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress through 4.8.2, when domain-based flashmediaelement.swf sandboxing is not used, allows remote attackers to conduct cross-domain Flash injection (XSF) attacks by leveraging code contained within the wp-includes/js/mediaelement/flashmediaelement.swf file."
        },
        {
          "name": "CVE-2017-1000600",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress version <4.9 contains a CWE-20 Input Validation vulnerability in thumbnail processing that can result in remote code execution. This attack appears to be exploitable via thumbnail upload by an authenticated user and may require additional plugins in order to be exploited however this has not been confirmed at this time. This issue appears to have been partially, but not completely fixed in WordPress 4.9"
        },
        {
          "name": "CVE-2017-14718",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was susceptible to a Cross-Site Scripting attack in the link modal via a javascript: or data: URL."
        },
        {
          "name": "CVE-2017-14720",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress allowed a Cross-Site scripting attack in the template list view via a crafted template name."
        },
        {
          "name": "CVE-2017-14721",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress allowed Cross-Site scripting in the plugin editor via a crafted plugin name."
        },
        {
          "name": "CVE-2017-14723",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Before version 4.8.2, WordPress mishandled % characters and additional placeholder values in $wpdb->prepare, and thus did not properly address the possibility of plugins and themes enabling SQL injection attacks."
        },
        {
          "name": "CVE-2017-14724",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was vulnerable to cross-site scripting in oEmbed discovery."
        },
        {
          "name": "CVE-2017-14725",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was susceptible to an open redirect attack in wp-admin/edit-tag-form.php and wp-admin/user-edit.php."
        },
        {
          "name": "CVE-2017-14726",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before version 4.8.2, WordPress was vulnerable to a cross-site scripting attack via shortcodes in the TinyMCE visual editor."
        },
        {
          "name": "CVE-2017-16510",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 4.8.3 is affected by an issue where $wpdb->prepare() can create unexpected and unsafe queries leading to potential SQL injection (SQLi) in plugins and themes, as demonstrated by a \"double prepare\" approach, a different vulnerability than CVE-2017-14723."
        },
        {
          "name": "CVE-2017-17091",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-admin/user-new.php in WordPress before 4.9.1 sets the newbloguser key to a string that can be directly derived from the user ID, which allows remote attackers to bypass intended access restrictions by entering this string."
        },
        {
          "name": "CVE-2017-17092",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/functions.php in WordPress before 4.9.1 does not require the unfiltered_html capability for upload of .js files, which might allow remote attackers to conduct XSS attacks via a crafted file."
        },
        {
          "name": "CVE-2017-17093",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/general-template.php in WordPress before 4.9.1 does not properly restrict the lang attribute of an HTML element, which might allow attackers to conduct XSS attacks via the language setting of a site."
        },
        {
          "name": "CVE-2017-17094",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/feed.php in WordPress before 4.9.1 does not properly restrict enclosures in RSS and Atom fields, which might allow attackers to conduct XSS attacks via a crafted URL."
        },
        {
          "name": "CVE-2017-5487",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php in the REST API implementation in WordPress 4.7 before 4.7.1 does not properly restrict listings of post authors, which allows remote attackers to obtain sensitive information via a wp-json/wp/v2/users request."
        },
        {
          "name": "CVE-2017-5488",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Multiple cross-site scripting (XSS) vulnerabilities in wp-admin/update-core.php in WordPress before 4.7.1 allow remote attackers to inject arbitrary web script or HTML via the (1) name or (2) version header of a plugin."
        },
        {
          "name": "CVE-2017-5489",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site request forgery (CSRF) vulnerability in WordPress before 4.7.1 allows remote attackers to hijack the authentication of unspecified victims via vectors involving a Flash file upload."
        },
        {
          "name": "CVE-2017-5490",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in the theme-name fallback functionality in wp-includes/class-wp-theme.php in WordPress before 4.7.1 allows remote attackers to inject arbitrary web script or HTML via a crafted directory name of a theme, related to wp-admin/includes/class-theme-installer-skin.php."
        },
        {
          "name": "CVE-2017-5491",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-mail.php in WordPress before 4.7.1 might allow remote attackers to bypass intended posting restrictions via a spoofed mail server with the mail.example.com name."
        },
        {
          "name": "CVE-2017-5492",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Cross-site request forgery (CSRF) vulnerability in the widget-editing accessibility-mode feature in WordPress before 4.7.1 allows remote attackers to hijack the authentication of unspecified victims for requests that perform a widgets-access action, related to wp-admin/includes/class-wp-screen.php and wp-admin/widgets.php."
        },
        {
          "name": "CVE-2017-5493",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "wp-includes/ms-functions.php in the Multisite WordPress API in WordPress before 4.7.1 does not properly choose random numbers for keys, which makes it easier for remote attackers to bypass intended access restrictions via a crafted (1) site signup or (2) user signup."
        },
        {
          "name": "CVE-2017-5610",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "wp-admin/includes/class-wp-press-this.php in Press This in WordPress before 4.7.2 does not properly restrict visibility of a taxonomy-assignment user interface, which allows remote attackers to bypass intended access restrictions by reading terms."
        },
        {
          "name": "CVE-2017-5611",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "SQL injection vulnerability in wp-includes/class-wp-query.php in WP_Query in WordPress before 4.7.2 allows remote attackers to execute arbitrary SQL commands by leveraging the presence of an affected plugin or theme that mishandles a crafted post type name."
        },
        {
          "name": "CVE-2017-5612",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Cross-site scripting (XSS) vulnerability in wp-admin/includes/class-wp-posts-list-table.php in the posts list table in WordPress before 4.7.2 allows remote attackers to inject arbitrary web script or HTML via a crafted excerpt."
        },
        {
          "name": "CVE-2017-6814",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3, there is authenticated Cross-Site Scripting (XSS) via Media File Metadata. This is demonstrated by both (1) mishandling of the playlist shortcode in the wp_playlist_shortcode function in wp-includes/media.php and (2) mishandling of meta information in the renderTracks function in wp-includes/js/mediaelement/wp-playlist.js."
        },
        {
          "name": "CVE-2017-6815",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-includes/pluggable.php), control characters can trick redirect URL validation."
        },
        {
          "name": "CVE-2017-6816",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-admin/plugins.php), unintended files can be deleted by administrators using the plugin deletion functionality."
        },
        {
          "name": "CVE-2017-6817",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-includes/embed.php), there is authenticated Cross-Site Scripting (XSS) in YouTube URL Embeds."
        },
        {
          "name": "CVE-2017-6818",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3 (wp-admin/js/tags-box.js), there is cross-site scripting (XSS) via taxonomy term names."
        },
        {
          "name": "CVE-2017-6819",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.3, there is cross-site request forgery (CSRF) in Press This (wp-admin/includes/class-wp-press-this.php), leading to excessive use of server resources. The CSRF can trigger an outbound HTTP request for a large file that is then parsed by Press This."
        },
        {
          "name": "CVE-2017-8295",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress through 4.7.4 relies on the Host HTTP header for a password-reset e-mail message, which makes it easier for remote attackers to reset arbitrary passwords by making a crafted wp-login.php?action=lostpassword request and then arranging for this message to bounce or be resent, leading to transmission of the reset key to a mailbox on an attacker-controlled SMTP server. This is related to problematic use of the SERVER_NAME variable in wp-includes/pluggable.php in conjunction with the PHP mail function. Exploitation is not achievable in all cases because it requires at least one of the following: (1) the attacker can prevent the victim from receiving any e-mail messages for an extended period of time (such as 5 days), (2) the victim's e-mail system sends an autoresponse containing the original message, or (3) the victim manually composes a reply containing the original message."
        },
        {
          "name": "CVE-2017-9061",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.5, a cross-site scripting (XSS) vulnerability exists when attempting to upload very large files, because the error message does not properly restrict presentation of the filename."
        },
        {
          "name": "CVE-2017-9062",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, there is improper handling of post meta data values in the XML-RPC API."
        },
        {
          "name": "CVE-2017-9063",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.7.5, a cross-site scripting (XSS) vulnerability related to the Customizer exists, involving an invalid customization session."
        },
        {
          "name": "CVE-2017-9064",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, a Cross Site Request Forgery (CSRF) vulnerability exists in the filesystem credentials dialog because a nonce is not required for updating credentials."
        },
        {
          "name": "CVE-2017-9065",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, there is a lack of capability checks for post meta data in the XML-RPC API."
        },
        {
          "name": "CVE-2017-9066",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.7.5, there is insufficient redirect validation in the HTTP class, leading to SSRF."
        },
        {
          "name": "CVE-2018-1000773",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress version 4.9.8 and earlier contains a CWE-20 Input Validation vulnerability in thumbnail processing that can result in remote code execution due to an incomplete fix for CVE-2017-1000600. This attack appears to be exploitable via thumbnail upload by an authenticated user and may require additional plugins in order to be exploited however this has not been confirmed at this time."
        },
        {
          "name": "CVE-2018-10100",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before WordPress 4.9.5, the redirection URL for the login page was not validated or sanitized if forced to use HTTPS."
        },
        {
          "name": "CVE-2018-10101",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before WordPress 4.9.5, the URL validator assumed URLs with the hostname localhost were on the same host as the WordPress server."
        },
        {
          "name": "CVE-2018-10102",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Before WordPress 4.9.5, the version string was not escaped in the get_the_generator function, and could lead to XSS in a generator tag."
        },
        {
          "name": "CVE-2018-12895",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress through 4.9.6 allows Author users to execute arbitrary code by leveraging directory traversal in the wp-admin/post.php thumb parameter, which is passed to the PHP unlink function and can delete the wp-config.php file. This is related to missing filename validation in the wp-includes/post.php wp_delete_attachment function. The attacker must have capabilities for files and posts that are normally available only to the Author, Editor, and Administrator roles. The attack methodology is to delete wp-config.php and then launch a new installation process to increase the attacker's privileges."
        },
        {
          "name": "CVE-2018-20147",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, authors could modify metadata to bypass intended restrictions on deleting files."
        },
        {
          "name": "CVE-2018-20148",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, contributors could conduct PHP object injection attacks via crafted metadata in a wp.getMediaItem XMLRPC call. This is caused by mishandling of serialized data at phar:// URLs in the wp_get_attachment_thumb_file function in wp-includes/post.php."
        },
        {
          "name": "CVE-2018-20149",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, when the Apache HTTP Server is used, authors could upload crafted files that bypass intended MIME type restrictions, leading to XSS, as demonstrated by a .jpg file without JPEG data."
        },
        {
          "name": "CVE-2018-20150",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, crafted URLs could trigger XSS for certain use cases involving plugins."
        },
        {
          "name": "CVE-2018-20151",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, the user-activation page could be read by a search engine's web crawler if an unusual configuration were chosen. The search engine could then index and display a user's e-mail address and (rarely) the password that was generated by default."
        },
        {
          "name": "CVE-2018-20152",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, authors could bypass intended restrictions on post types via crafted input."
        },
        {
          "name": "CVE-2018-20153",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, contributors could modify new comments made by users with greater privileges, possibly causing XSS."
        },
        {
          "name": "CVE-2018-5776",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 4.9.2 has XSS in the Flash fallback files in MediaElement (under wp-includes/js/mediaelement)."
        },
        {
          "name": "CVE-2018-6389",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In WordPress through 4.9.2, unauthenticated attackers can cause a denial of service (resource consumption) by using the large list of registered .js files (from wp-includes/script-loader.php) to construct a series of requests to load every file many times."
        },
        {
          "name": "CVE-2019-16217",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in media uploads because wp_ajax_upload_attachment is mishandled."
        },
        {
          "name": "CVE-2019-16218",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in stored comments."
        },
        {
          "name": "CVE-2019-16219",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in shortcode previews."
        },
        {
          "name": "CVE-2019-16220",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 5.2.3, validation and sanitization of a URL in wp_validate_redirect in wp-includes/pluggable.php could lead to an open redirect."
        },
        {
          "name": "CVE-2019-16221",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows reflected XSS in the dashboard."
        },
        {
          "name": "CVE-2019-16222",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 has an issue with URL sanitization in wp_kses_bad_protocol_once in wp-includes/kses.php that can lead to cross-site scripting (XSS) attacks."
        },
        {
          "name": "CVE-2019-16223",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.3 allows XSS in post previews by authenticated users."
        },
        {
          "name": "CVE-2019-16781",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 5.3.1, authenticated users with lower privileges (like contributors) can inject JavaScript code in the block editor, which is executed within the dashboard. It can lead to an admin opening the affected post in the editor leading to XSS."
        },
        {
          "name": "CVE-2019-17669",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.2.4 has a Server Side Request Forgery (SSRF) vulnerability because URL validation does not consider the interpretation of a name as a series of hex characters."
        },
        {
          "name": "CVE-2019-17670",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.2.4 has a Server Side Request Forgery (SSRF) vulnerability because Windows paths are mishandled during certain validation of relative URLs."
        },
        {
          "name": "CVE-2019-17671",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In WordPress before 5.2.4, unauthenticated viewing of certain content is possible because the static query property is mishandled."
        },
        {
          "name": "CVE-2019-17672",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.4 is vulnerable to a stored XSS attack to inject JavaScript into STYLE elements."
        },
        {
          "name": "CVE-2019-17673",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.2.4 is vulnerable to poisoning of the cache of JSON GET requests because certain requests lack a Vary: Origin header."
        },
        {
          "name": "CVE-2019-17674",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.2.4 is vulnerable to stored XSS (cross-site scripting) via the Customizer."
        },
        {
          "name": "CVE-2019-17675",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.2.4 does not properly consider type confusion during validation of the referer in the admin pages, possibly leading to CSRF."
        },
        {
          "name": "CVE-2019-20041",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "wp_kses_bad_protocol in wp-includes/kses.php in WordPress before 5.3.1 mishandles the HTML5 colon named entity, allowing attackers to bypass input sanitization, as demonstrated by the javascript&colon; substring."
        },
        {
          "name": "CVE-2019-20042",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In wp-includes/formatting.php in WordPress 3.7 to 5.3.0, the function wp_targeted_link_rel() can be used in a particular way to result in a stored cross-site scripting (XSS) vulnerability. This has been patched in WordPress 5.3.1, along with all the previous WordPress versions from 3.7 to 5.3 via a minor release."
        },
        {
          "name": "CVE-2019-20043",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in WordPress 3.7 to 5.3.0, authenticated users who do not have the rights to publish a post are able to mark posts as sticky or unsticky via the REST API. For example, the contributor role does not have such rights, but this allowed them to bypass that. This has been patched in WordPress 5.3.1, along with all the previous WordPress versions from 3.7 to 5.3 via a minor release."
        },
        {
          "name": "CVE-2019-8942",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 4.9.9 and 5.x before 5.0.1 allows remote code execution because an _wp_attached_file Post Meta entry can be changed to an arbitrary string, such as one ending with a .jpg?file.php substring. An attacker with author privileges can execute arbitrary code by uploading a crafted image containing PHP code in the Exif metadata. Exploitation can leverage CVE-2019-8943."
        },
        {
          "name": "CVE-2019-8943",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress through 5.0.3 allows Path Traversal in wp_crop_image(). An attacker (who has privileges to crop an image) can write the output image to an arbitrary directory via a filename containing two image extensions and ../ sequences, such as a filename ending with the .jpg?/../../file.jpg substring."
        },
        {
          "name": "CVE-2019-9787",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.1.1 does not properly filter comment content, leading to Remote Code Execution by unauthenticated users in a default configuration. This occurs because CSRF protection is mishandled, and because Search Engine Optimization of A elements is performed incorrectly, leading to XSS. The XSS results in administrative access, which allows arbitrary changes to .php files. This is related to wp-admin/includes/ajax-actions.php and wp-includes/comment.php."
        },
        {
          "name": "CVE-2020-11026",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In affected versions of WordPress, files with a specially crafted name when uploaded to the Media section can lead to script execution upon accessing the file. This requires an authenticated user with privileges to upload files. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11027",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In affected versions of WordPress, a password reset link emailed to a user does not expire upon changing the user password. Access would be needed to the email account of the user by a malicious party for successful execution. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11028",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "In affected versions of WordPress, some private posts, which were previously public, can result in unauthenticated disclosure under a specific set of conditions. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11029",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In affected versions of WordPress, a vulnerability in the stats() method of class-wp-object-cache.php can be exploited to execute cross-site scripting (XSS) attacks. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-11030",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In affected versions of WordPress, a special payload can be crafted that can lead to scripts getting executed within the search block of the block editor. This requires an authenticated user with the ability to add content. This has been patched in version 5.4.1, along with all the previously affected versions via a minor release (5.3.3, 5.2.6, 5.1.5, 5.0.9, 4.9.14, 4.8.13, 4.7.17, 4.6.18, 4.5.21, 4.4.22, 4.3.23, 4.2.27, 4.1.30, 4.0.30, 3.9.31, 3.8.33, 3.7.33)."
        },
        {
          "name": "CVE-2020-25286",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "In wp-includes/comment-template.php in WordPress before 5.4.2, comments from a post or page could sometimes be seen in the latest comments even if the post or page was not public."
        },
        {
          "name": "CVE-2020-28032",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.5.2 mishandles deserialization requests in wp-includes/Requests/Utility/FilteredIterator.php."
        },
        {
          "name": "CVE-2020-28033",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "WordPress before 5.5.2 mishandles embeds from disabled sites on a multisite network, as demonstrated by allowing a spam embed."
        },
        {
          "name": "CVE-2020-28034",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.5.2 allows XSS associated with global variables."
        },
        {
          "name": "CVE-2020-28035",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.5.2 allows attackers to gain privileges via XML-RPC."
        },
        {
          "name": "CVE-2020-28036",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "wp-includes/class-wp-xmlrpc-server.php in WordPress before 5.5.2 allows attackers to gain privileges by using XML-RPC to comment on a post."
        },
        {
          "name": "CVE-2020-28037",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "is_blog_installed in wp-includes/functions.php in WordPress before 5.5.2 improperly determines whether WordPress is already installed, which might allow an attacker to perform a new installation, leading to remote code execution (as well as a denial of service for the old installation)."
        },
        {
          "name": "CVE-2020-28038",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.5.2 allows stored XSS via post slugs."
        },
        {
          "name": "CVE-2020-28039",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "is_protected_meta in wp-includes/meta.php in WordPress before 5.5.2 allows arbitrary file deletion because it does not properly determine whether a meta key is considered protected."
        },
        {
          "name": "CVE-2020-28040",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "WordPress before 5.5.2 allows CSRF attacks that change a theme's background image."
        },
        {
          "name": "CVE-2021-44223",
          "software": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "WordPress before 5.8 lacks support for the Update URI plugin header. This makes it easier for remote attackers to execute arbitrary code via a supply-chain attack against WordPress installations that use any plugin for which the slug satisfies the naming constraints of the WordPress.org Plugin Directory but is not yet present in that directory."
        }
      ]
    },
    {
      "package": "create-wa-wordpress-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT-fat.jar (shaded: com.google.guava:guava:25.1-jre)",
      "alerts": 1,
      "highest": "LOW",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8908",
          "software": "cpe:2.3:a:google:guava:*:*:*:*:*:*:*:*",
          "severity": "LOW",
          "description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT-fat.jar (shaded: io.kubernetes:client-java-api:6.0.1)",
      "alerts": 2,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8570",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code."
        },
        {
          "name": "CVE-2021-25738",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT-fat.jar (shaded: io.kubernetes:client-java-proto:6.0.1)",
      "alerts": 2,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8570",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code."
        },
        {
          "name": "CVE-2021-25738",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT-fat.jar (shaded: io.kubernetes:client-java:6.0.1)",
      "alerts": 2,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8570",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code."
        },
        {
          "name": "CVE-2021-25738",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT-fat.jar (shaded: org.apache.commons:commons-compress:1.18)",
      "alerts": 5,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2019-12402",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress."
        },
        {
          "name": "CVE-2021-35515",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package."
        },
        {
          "name": "CVE-2021-35516",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package."
        },
        {
          "name": "CVE-2021-35517",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package."
        },
        {
          "name": "CVE-2021-36090",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT-fat.jar (shaded: org.yaml:snakeyaml:1.19)",
      "alerts": 1,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2017-18640",
          "software": "cpe:2.3:a:snakeyaml_project:snakeyaml:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564."
        }
      ]
    },
    {
      "package": "instantiate-du-kubernetes-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "instantiate-du-swarm-0.0.1-SNAPSHOT-fat.jar (shaded: org.apache.httpcomponents:httpclient:4.5)",
      "alerts": 1,
      "highest": "MEDIUM",
      "vulnerabilities": [
        {
          "name": "CVE-2020-13956",
          "software": "cpe:2.3:a:apache:httpclient:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution."
        }
      ]
    },
    {
      "package": "instantiate-du-swarm-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "instantiate-k8s-cluster-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.kubernetes:client-java-api:7.0.0)",
      "alerts": 2,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8570",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code."
        },
        {
          "name": "CVE-2021-25738",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution."
        }
      ]
    },
    {
      "package": "instantiate-k8s-cluster-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.kubernetes:client-java-proto:7.0.0)",
      "alerts": 2,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8570",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code."
        },
        {
          "name": "CVE-2021-25738",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution."
        }
      ]
    },
    {
      "package": "instantiate-k8s-cluster-azure-0.0.1-SNAPSHOT-fat.jar (shaded: io.kubernetes:client-java:7.0.0)",
      "alerts": 2,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2020-8570",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code."
        },
        {
          "name": "CVE-2021-25738",
          "software": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution."
        }
      ]
    },
    {
      "package": "instantiate-k8s-cluster-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.apache.commons:commons-compress:1.19)",
      "alerts": 4,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2021-35515",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package."
        },
        {
          "name": "CVE-2021-35516",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package."
        },
        {
          "name": "CVE-2021-35517",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package."
        },
        {
          "name": "CVE-2021-36090",
          "software": "cpe:2.3:a:apache:commons_compress:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package."
        }
      ]
    },
    {
      "package": "instantiate-k8s-cluster-azure-0.0.1-SNAPSHOT-fat.jar (shaded: org.yaml:snakeyaml:1.25)",
      "alerts": 1,
      "highest": "HIGH",
      "vulnerabilities": [
        {
          "name": "CVE-2017-18640",
          "software": "cpe:2.3:a:snakeyaml_project:snakeyaml:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564."
        }
      ]
    },
    {
      "package": "instantiate-k8s-cluster-azure-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "instantiate-vm-azure-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "service-broker-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    },
    {
      "package": "vertx-esb-common-0.0.1-SNAPSHOT.jar",
      "alerts": 5,
      "highest": "CRITICAL",
      "vulnerabilities": [
        {
          "name": "CVE-2014-9389",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:pro:*:*:*",
          "severity": "HIGH",
          "description": "Directory traversal vulnerability in Sonatype Nexus OSS and Pro before 2.11.1-01 allows remote attackers to read or write to arbitrary files via unspecified vectors."
        },
        {
          "name": "CVE-2019-7238",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "CRITICAL",
          "description": "Sonatype Nexus Repository Manager before 3.15.0 has Incorrect Access Control."
        },
        {
          "name": "CVE-2020-10199",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2)."
        },
        {
          "name": "CVE-2020-10203",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "MEDIUM",
          "description": "Sonatype Nexus Repository before 3.21.2 allows XSS."
        },
        {
          "name": "CVE-2020-10204",
          "software": "cpe:2.3:a:sonatype:nexus:*:*:*:*:*:*:*:*",
          "severity": "HIGH",
          "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution."
        }
      ]
    }
  ]
}